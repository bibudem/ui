@use '../../scss/states';

:host,
*,
*::after,
*::before {
  box-sizing: border-box;
}

:host {
  display: block;
  font-size: var(--bib-avis-size, var(--md-sys-typescale-title-medium-size, inherit));
  background: var(--bib-avis-container-color, var(--md-sys-color-warningContainer, #fffac6));
}

:host([hidden]) {
  display: none;
}

.inner {
  display: flex;
  align-items: center;
  margin: 0 auto;
  padding: 0.75rem;
  gap: 1em;

  :host(:not([fluide])) & {
    max-width: 1536px;
    padding: 0.75rem 64px;
  }
}

.message {
  flex-grow: 1;
  min-height: 24px;
}

.btn-close {
  @include states.focus;

  display: inline-flex;
  -webkit-box-align: center;
  align-items: center;
  -webkit-box-pack: center;
  justify-content: center;
  position: relative;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  background-color: transparent;
  outline: 0px;
  border: 0px;
  margin: 0px;
  cursor: pointer;
  user-select: none;
  vertical-align: middle;
  appearance: none;
  text-decoration: none;
  text-align: center;
  flex: 0 0 auto;
  font-size: 1.5rem;
  font-size: 36px;
  font-weight: 700;
  line-height: 1;
  position: relative;
  padding: 8px;
  padding: 0;
  border-radius: 50%;
  overflow: visible;
  color: var(--bib-btn-close-color, rgba(0, 0, 0, 0.4));
  transition:
    color 150ms cubic-bezier(0.4, 0, 0.2, 1),
    background-color 150ms cubic-bezier(0.4, 0, 0.2, 1);

  &:hover {
    color: var(--bib-btn-close-hover-color, rgba(0, 0, 0, 0.8));

    &::after {
      background-color: rgba(0, 0, 0, 0.04);
    }
  }

  &::after {
    width: calc(100% + 16px);
    height: calc(100% + 16px);
    border-radius: 50%;
    background-color: transparent;
    transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  }

  > svg {
    fill: currentColor;
  }
}

{"version":3,"file":"bib-consent-preferences-dialog-Bj6RjQcv.js","sources":["../node_modules/@lit/context/lib/context-request-event.js","../node_modules/@lit/context/lib/controllers/context-consumer.js","../node_modules/@auroratide/toggle-switch/lib/events.js","../node_modules/@auroratide/toggle-switch/lib/toggle-switch.js","../src/components/bib-consent/bib-consent-preferences-dialog.js","../node_modules/@auroratide/toggle-switch/lib/define.js","../node_modules/lodash-es/isBoolean.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nclass s extends Event{constructor(s,t,e){super(\"context-request\",{bubbles:!0,composed:!0}),this.context=s,this.callback=t,this.subscribe=e??!1}}export{s as ContextRequestEvent};\n//# sourceMappingURL=context-request-event.js.map\n","import{ContextRequestEvent as t}from\"../context-request-event.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class s{constructor(t,s,i,h){if(this.subscribe=!1,this.provided=!1,this.value=void 0,this.t=(t,s)=>{this.unsubscribe&&(this.unsubscribe!==s&&(this.provided=!1,this.unsubscribe()),this.subscribe||this.unsubscribe()),this.value=t,this.host.requestUpdate(),this.provided&&!this.subscribe||(this.provided=!0,this.callback&&this.callback(t,s)),this.unsubscribe=s},this.host=t,void 0!==s.context){const t=s;this.context=t.context,this.callback=t.callback,this.subscribe=t.subscribe??!1}else this.context=s,this.callback=i,this.subscribe=h??!1;this.host.addController(this)}hostConnected(){this.dispatchRequest()}hostDisconnected(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=void 0)}dispatchRequest(){this.host.dispatchEvent(new t(this.context,this.t,this.subscribe))}}export{s as ContextConsumer};\n//# sourceMappingURL=context-consumer.js.map\n","export const CHANGED = 'toggle-switch:change';\nexport const changeEvent = (checked) => new CustomEvent(CHANGED, {\n    detail: { checked }\n});\n","import { changeEvent } from './events.js';\nconst CHECKED_ATTR = 'checked';\nconst DISABLED_ATTR = 'disabled';\nexport class ToggleSwitchElement extends HTMLElement {\n    static defaultElementName = 'toggle-switch';\n    static html = `\n        <span part=\"track\">\n            <span part=\"slider\"></span>\n        </span>\n    `;\n    static css = `\n        :host {\n            display: inline-block;\n            width: 2em;\n            height: 1em;\n            cursor: pointer;\n        }\n\n        span {\n            box-sizing: border-box;\n            display: inline-block;\n            line-height: 1;\n        }\n\n        [part=\"track\"] {\n            width: 100%;\n            height: 100%;\n            background-color: #dddddd;\n            text-align: left;\n            transition: all 0.256s;\n        }\n\n        [part=\"slider\"] {\n            width: 50%;\n            height: 100%;\n            background-color: #777777;\n            transition: all 0.256s;\n            vertical-align: text-top;\n        }\n\n        :host([checked]) [part=\"slider\"] {\n            transform: translateX(100%);\n        }\n\n        :host([disabled]) {\n            cursor: not-allowed;\n            opacity: 0.5;\n        }\n    `;\n    static formAssociated = true;\n    static get observedAttributes() {\n        return [CHECKED_ATTR];\n    }\n    constructor() {\n        super();\n        this.#createRoot();\n    }\n    get checked() { return this.hasAttribute(CHECKED_ATTR); }\n    set checked(value) { this.toggleAttribute(CHECKED_ATTR, value); }\n    get disabled() { return this.hasAttribute(DISABLED_ATTR); }\n    set disabled(value) { this.toggleAttribute(DISABLED_ATTR, value); }\n    toggle = () => {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n        }\n    };\n    connectedCallback() {\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'switch');\n        }\n        if (!this.hasAttribute('tabindex')) {\n            this.setAttribute('tabindex', '0');\n        }\n        this.#updateChecked(false);\n        this.addEventListener('click', this.toggle);\n        this.addEventListener('keydown', this.#onKeyDown);\n    }\n    disconnectedCallback() {\n        this.removeEventListener('click', this.toggle);\n        this.removeEventListener('keydown', this.#onKeyDown);\n    }\n    attributeChangedCallback(name) {\n        if (name === CHECKED_ATTR) {\n            this.#updateChecked(true);\n        }\n    }\n    #onKeyDown = (e) => {\n        switch (e.key) {\n            case ' ':\n            case 'Enter':\n                e.preventDefault();\n                this.toggle();\n                break;\n            default:\n                break;\n        }\n    };\n    #updateChecked = (dispatch = false) => {\n        this.setAttribute('aria-checked', this.checked.toString());\n        if (dispatch)\n            this.dispatchEvent(changeEvent(this.checked));\n    };\n    #createRoot = () => {\n        const root = this.shadowRoot ?? this.attachShadow({ mode: 'open' });\n        const style = document.createElement('style');\n        style.innerHTML = ToggleSwitchElement.css;\n        const template = document.createElement('template');\n        template.innerHTML = ToggleSwitchElement.html;\n        root.appendChild(style);\n        root.appendChild(template.content);\n        return root;\n    };\n}\n","import { css, html, LitElement, unsafeCSS } from 'lit'\nimport { ContextConsumer, ContextProvider } from '@lit/context'\nimport { createRef, ref } from 'lit/directives/ref.js'\nimport { isBoolean } from 'lodash-es'\nimport '@auroratide/toggle-switch/lib/define.js'\nimport { consentContext } from './consent-context.js'\nimport { DEFAULT_PREFERENCES } from './constants.js'\nimport styles from './bib-consent-preferences-dialog.scss?inline'\n\n/**\n * Generates an object with the default consent preferences, where each key is set to the provided boolean value.\n *\n * @param {boolean} value - The boolean value to set for each consent preference.\n * @returns {Object} An object with the default consent preferences, where each key is set to the provided value.\n */\nfunction getConsentValues(value) {\n  return Object.keys(DEFAULT_PREFERENCES).reduce((obj, key) => ({ ...obj, [key]: value }), {})\n}\nexport class BibConsentPreferencesDialog extends LitElement {\n  static properties = {\n    debug: {\n      type: Boolean,\n      reflect: true\n    },\n    open: {\n      type: Boolean,\n      state: true\n    },\n  }\n\n  static styles = [\n    css`${unsafeCSS(styles)}`\n  ]\n\n  _consentConsumer\n  #toggleChoices = getConsentValues(false)\n\n  /**\n   * Constructs a new `BibConsentPreferencesDialog` instance.\n   *\n   * This constructor initializes the component's state, creates a reference to the dialog element, and subscribes to the consent context to retrieve the user's consent preferences.\n   *\n   * The `open` property is initially set to `false`, and the `#toggleChoices` property is initialized based on the consent context value. If the consent context value is `null`, `#toggleChoices` is set to the default consent preferences.\n   */\n  constructor() {\n    super()\n    this.open = false\n    this._dialogRef = createRef()\n    this._consentConsumer = new ContextConsumer(this, {\n      context: consentContext, subscribe: true, callback: value => {\n        console.log('callback: ', value)\n        this.#toggleChoices = value === null ? getConsentValues(false) : value\n        // this.requestUpdate()\n      }\n    })\n  }\n\n  /**\n   * Saves the user's consent preferences.\n   *\n   * @param {boolean|Object} preference - The consent preferences to save. If a boolean is provided, it will be used to generate a full set of consent values. If an object is provided, it will be used directly as the consent preferences.\n   * @returns {void}\n   * @throws {Error} If there is an error saving the preferences.\n   */\n  async savePreferences(preference) {\n    try {\n      let preferences\n\n      if (isBoolean(preference)) {\n        preferences = getConsentValues(preference)\n      } else {\n        preferences = this.#toggleChoices\n      }\n\n      this.dispatchEvent(new CustomEvent('update', { detail: preferences }))\n    } catch (error) {\n      console.error('[savePreferences] error: ', error)\n      throw error\n    }\n  }\n\n  /**\n   * Shows the consent preferences dialog.\n   *\n   * This method retrieves the user's consent preferences from the consent context and initializes the `#toggleChoices` property with the values. It then shows the dialog modal.\n   *\n   * @returns {void}\n   */\n  show() {\n    console.log('[show] this._consentConsumer.value: ', this._consentConsumer.value)\n    this.#toggleChoices = this._consentConsumer.value ? { ...this._consentConsumer.value } : getConsentValues(false)\n    this._dialogRef.value?.showModal()\n  }\n\n  /**\n   * Closes the dialog and optionally emits an event.\n   *\n   * @param {boolean} [emit=true] - Whether to emit the 'close' event when the dialog is closed.\n   * @returns {void}\n   */\n  close(emit = true) {\n    this._dialogRef.value?.close(emit)\n  }\n\n  #onDetailsClick(event) {\n    // Prevent the <details> element to open if user clics on the toggle button\n    if (event.composedPath().some(node => node.matches?.('toggle-switch.switch'))) {\n      event.preventDefault()\n    }\n  }\n\n  #onToggleSwitchChange(event) {\n    console.log('[#onToggleSwitchChange] event: ', event)\n    const { target, detail } = event\n    const { checked } = detail\n    const name = target.getAttribute('name')\n    this.#toggleChoices[name] = checked\n  }\n\n  render() {\n\n    return html`\n      <bib-consent-dialog show-close class='preferences-dialog' ${ref(this._dialogRef)}>\n        <div class=\"content-container\">\n          <div class=\"title\">Personnaliser les t√©moins</div>\n          <div class=\"personalized-cookies-description\">\n            <p>Les t√©moins (aussi appel√©s ¬´&nbsp;cookies&nbsp;¬ª) sont de petits fichiers textes qui sont t√©l√©charg√©s lorsque vous consultez certaines pages d‚Äôun site et qui sont enregistr√©s dans la m√©moire de l‚Äôappareil que vous utilisez. Ils permettent d‚Äôenregistrer certaines informations (type de navigateur, langue, pays, adresse IP, identifiant, etc.) afin d‚Äô√™tre r√©cup√©r√©es par le serveur lors de visites subs√©quentes. Ils sont utilis√©s pour mettre √† jour et optimiser nos plateformes en fonction de l‚Äôutilisation que vous en faites et de vos besoins.</p>\n            <p>L‚ÄôUdeM collecte des donn√©es sur les plateformes, afin d‚Äôanalyser leur utilisation et d‚Äôam√©liorer l‚Äôexp√©rience des visiteurs.</p>\n            <p>L‚ÄôUdeM utilise √©galement les services de <a href=\"https://vie-privee.umontreal.ca/ga\" target=\"_blank\"> Google Analytics</a>, afin d'analyser le trafic Web et de recueillir des donn√©es de navigation √† des fins statistiques et d‚Äôam√©lioration des Plateformes.</p>\n            <p>Parce que nous respectons votre droit √† la vie priv√©e, nous vous donnons la possibilit√© de ne pas autoriser certains types de t√©moins. Cliquez sur les diff√©rentes cat√©gories pour obtenir plus de d√©tails sur chacune d‚Äôentre elles et modifier les param√®tres par d√©faut. Toutefois, si vous d√©sactivez certains types de t√©moins, votre exp√©rience de navigation et les services que nous sommes en mesure de vous offrir peuvent √™tre impact√©s.</p>\n          </div>\n          <div class=\"accordion-container\">\n            <div class=\"accordion-list\">\n              <details class=\"accordion-item\">\n                <summary class=\"accordion-item__summary\">\n                  <span class=\"accordion-item__summary-title\">T√©moins n√©cessaires</span>\n                  <span class=\"accordion-item__summary-icon\">\n                    <span class=\"close\">+</span>\n                    <span class=\"open\">-</span>\n                    <div class=\"toggle-container label\">Toujours activ√©s</div>\n                  </span>\n                </summary>\n                <div class=\"accordion-item__content\">\n                  <p>Ces t√©moins sont essentiels au bon fonctionnement et √† la s√©curit√© de nos sites Web et services en ligne. Ils ne peuvent pas √™tre d√©sactiv√©s. Ils nous permettent notamment de s√©curiser votre connexion en recueillant vos informations d‚Äôidentification, personnaliser votre interface (ex. : choix de langue) et conserver vos pr√©f√©rences.</p>\n                  <p class=\"list-title\">Les renseignements suivants sont notamment recueillis&nbsp;:</p>\n                  <ul class=\"list-disc\">\n                    <li>le type et la version du navigateur;</li>\n                    <li>le type et la version du syst√®me d‚Äôexploitation;</li>\n                    <li>le type et le mod√®le d‚Äôappareil (t√©l√©phone, tablette ou ordinateur);</li>\n                    <li>la r√©solution de l‚Äô√©cran de l‚Äôappareil que vous utilisez;</li>\n                    <li>la langue utilis√©e par le navigateur.</li>\n                  </ul>\n                </div>\n              </details>\n\n              <details class=\"accordion-item\" @click=\"${{ handleEvent: this.#onDetailsClick, capture: true }}\">\n                <summary class=\"accordion-item__summary\">\n                  <div class=\"accordion-item__summary-title\">T√©moins de performance</div>\n                  <div class=\"accordion-item__summary-icon\">\n                    <span class=\"close\">+</span>\n                    <span class=\"open\">-</span>\n                    <div class=\"toggle-container\">\n                      <toggle-switch name=\"performanceCookies\" class=\"switch\" ?checked=\"${this.#toggleChoices.performanceCookies}\" @toggle-switch:change=\"${this.#onToggleSwitchChange}\"></toggle-switch>\n                    </div>\n                  </div>\n                </summary>\n                <div class=\"accordion-item__content\">\n                  <p>Ces t√©moins sont utilis√©s pour analyser la navigation sur nos sites (provenance des visiteurs, fr√©quence des visites, pages plus ou moins visit√©es, etc.) dans le but d‚Äôen am√©liorer le fonctionnement et d‚Äôoffrir une meilleure exp√©rience utilisateurs aux visiteurs. Toutes les informations collect√©es par ces t√©moins sont agr√©g√©es et donc anonymis√©es.</p>\n                </div>\n              </details>\n\n              <details class=\"accordion-item\" @click=\"${{ handleEvent: this.#onDetailsClick, capture: true }}\">\n                <summary class=\"accordion-item__summary\">\n                  <span class=\"accordion-item__summary-title\">T√©moins de fonctionnalit√©</span>\n                  <span class=\"accordion-item__summary-icon\">\n                    <span class=\"close\">+</span>\n                    <span class=\"open\">-</span>\n                    <div class=\"toggle-container\">\n                      <toggle-switch name=\"functionalityCookies\" class=\"switch\" ?checked=\"${this.#toggleChoices.functionalityCookies}\" @toggle-switch:change=\"${this.#onToggleSwitchChange}\"></toggle-switch>\n                    </div>\n                  </span>\n                </summary>\n                <div class=\"accordion-item__content\">\n                  <p>Ces t√©moins permettent d‚Äôam√©liorer les fonctionnalit√©s et la personnalisation de nos sites. Par exemple, ils rendent possible l‚Äôutilisation de vid√©os et de services de messagerie instantan√©e ou encore le partage de contenus de nos sites sur des plateformes de m√©dias sociaux. Si vous d√©sactivez ces t√©moins, votre exp√©rience de navigation et les services que nous sommes en mesure de vous offrir peuvent √™tre impact√©s.</p>\n                </div>\n              </details>\n              <details class=\"accordion-item\" @click=\"${{ handleEvent: this.#onDetailsClick, capture: true }}\">\n                <summary class=\"accordion-item__summary\"><span class=\"accordion-item__summary-title\">T√©moins publicitaires</span><span class=\"accordion-item__summary-icon\"><span class=\"close\">+</span><span class=\"open\">-</span>\n                    <div class=\"toggle-container\">\n                      <toggle-switch name=\"adsCookies\" class=\"switch\" ?checked=\"${this.#toggleChoices.adsCookies}\" @toggle-switch:change=\"${this.#onToggleSwitchChange}\"></toggle-switch>\n                    </div>\n                  </span></summary>\n                <div class=\"accordion-item__content\">\n                  <p>Ces t√©moins peuvent √™tre activ√©s sur nos sites web pour √©tablir des profils sur vos int√©r√™ts. Ils nous aident √† vous proposer des publicit√©s et des contenus personnalis√©s. Si vous d√©sactivez ces t√©moins, des publicit√©s et des contenus moins cibl√©es sur vos int√©r√™ts vous seront propos√©s.</p>\n                </div>\n              </details>\n            </div>\n            <p class=\"update-information\">Vous pouvez modifier en tout temps vos pr√©f√©rences en s√©lectionnant les param√®tres appropri√©s dans votre navigateur pour accepter ou refuser les t√©moins.</p>\n            <div class=\"actions-container\">\n              <button class=\"btn--filled\" type=\"button\" @click=\"${() => this.savePreferences()}\">Enregistrer mes pr√©f√©rences</button>\n              <button class=\"btn--filled\" type=\"button\" @click=\"${() => this.savePreferences(false)}\">Tout refuser</button>\n              <button class=\"btn--filled\" type=\"button\" @click=\"${() => this.savePreferences(true)}\">Tout accepter</button>\n            </div>\n            <div class=\"learn-more-container\">Voir notre <a href=\"https://vie-privee.umontreal.ca/confidentialite\">politique de confidentialit√©</a> et nos <a href=\"https://vie-privee.umontreal.ca/conditions-dutilisation\">conditions d‚Äôutilisation</a>. </div>\n          </div>\n        </div>\n      </bib-consent-dialog>\n    `\n  }\n}\n\nif (!window.customElements.get('bib-consent-preferences-dialog')) {\n  window.customElements.define('bib-consent-preferences-dialog', BibConsentPreferencesDialog)\n}","import { ToggleSwitchElement } from './toggle-switch.js';\nif (!window.customElements.get(ToggleSwitchElement.defaultElementName)) {\n    window.customElements.define(ToggleSwitchElement.defaultElementName, ToggleSwitchElement);\n}\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nexport default isBoolean;\n"],"names":["Event","s","t","e","super","bubbles","composed","this","context","callback","subscribe","i","h","provided","value","unsubscribe","host","requestUpdate","addController","dispatchRequest","dispatchEvent","CHECKED_ATTR","DISABLED_ATTR","ToggleSwitchElement","HTMLElement","constructor","toggle","disabled","checked","onKeyDown","key","preventDefault","updateChecked","dispatch","setAttribute","toString","CustomEvent","detail","createRoot","root","shadowRoot","attachShadow","mode","style","document","createElement","innerHTML","css","template","html","appendChild","content","hasAttribute","toggleAttribute","addEventListener","removeEventListener","name","static","getConsentValues","Object","keys","DEFAULT_PREFERENCES","reduce","obj","window","customElements","get","defaultElementName","define","BibConsentPreferencesDialog","LitElement","_consentConsumer","toggleChoices","open","_dialogRef","createRef","ContextConsumer","consentContext","console","log","preference","preferences","isObjectLike","baseGetTag","error","showModal","emit","close","ref","handleEvent","onDetailsClick","capture","performanceCookies","onToggleSwitchChange","functionalityCookies","adsCookies","savePreferences","event","composedPath","some","node","matches","target","getAttribute","debug","type","Boolean","reflect","state","unsafeCSS"],"mappings":"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","x_google_ignoreList":[0,1,2,3,5,6]}
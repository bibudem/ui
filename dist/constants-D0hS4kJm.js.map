{"version":3,"file":"constants-D0hS4kJm.js","sources":["../node_modules/postmessage-promise/build/postmessage-promise.esm.js","../node_modules/boolify-string/node_modules/type-detect/index.js","../node_modules/boolify-string/lib/boolify-string.js","../src/utils/url.js","../src/components/bib-consent/utils.js","../src/components/bib-consent/constants.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-lonely-if */\nvar CLIENT_RESPONSE = 'client_response';\nvar SERVER_RESPONSE = 'server_response';\nvar responseMap = {\n  server: {\n    receive: CLIENT_RESPONSE,\n    post: SERVER_RESPONSE\n  },\n  client: {\n    receive: SERVER_RESPONSE,\n    post: CLIENT_RESPONSE\n  }\n};\nvar KEY_METHODS = ['hand-shake', 'wave-hand', CLIENT_RESPONSE, SERVER_RESPONSE];\n/**\n * message channel\n * type: 'server' | 'client'\n */\nvar MessageChannel = /*#__PURE__*/_createClass(function MessageChannel(type, messageProxy, timeout) {\n  var _this = this;\n  _classCallCheck(this, MessageChannel);\n  _defineProperty(this, \"receiveMessage\", function (method, eventId, payload) {\n    if (method === responseMap[_this.type].receive) {\n      if (eventId && _this.messageResponse[eventId]) {\n        var response = _this.messageResponse[eventId];\n        delete _this.messageResponse[eventId];\n        response(payload);\n      }\n    } else {\n      // server postMessage and response\n      if (_this.listener) {\n        var _response = function _response(pload) {\n          _this.messageProxy.request(responseMap[_this.type].post, eventId, pload);\n        };\n        _this.listener(method, payload, _response);\n      } else {\n        console.warn('no message listener: ', method, payload);\n      }\n    }\n  });\n  _defineProperty(this, \"doPost\", function (_ref, method, payload) {\n    var resolve = _ref.resolve,\n      reject = _ref.reject,\n      eventId = _ref.eventId;\n    _this.messageResponse[eventId] = resolve;\n    try {\n      _this.messageProxy.request(method, eventId, payload);\n    } catch (e) {\n      delete _this.messageResponse[eventId];\n      reject();\n      throw e;\n    }\n  });\n  _defineProperty(this, \"listenMessage\", function (listener) {\n    _this.listener = listener;\n  });\n  _defineProperty(this, \"postMessage\", function (method, payload) {\n    if (KEY_METHODS.indexOf(method) >= 0) {\n      return Promise.reject(new Error(\"\".concat(method, \" is a protected key-method.\")));\n    }\n    return new Promise(function (resolve, reject) {\n      if (_this.destroyed) {\n        reject(new Error('message-channel had been destroyed!'));\n        return;\n      }\n      var ctimer = null;\n      var reswrap = function reswrap(value) {\n        clearTimeout(ctimer);\n        resolve(value);\n      };\n      var eventId = Math.random().toString().substr(3, 10);\n      _this.doPost({\n        resolve: reswrap,\n        reject: reject,\n        eventId: eventId\n      }, method, payload);\n      ctimer = setTimeout(function () {\n        if (_this.messageResponse) {\n          delete _this.messageResponse[eventId];\n        }\n        reject(new Error('postMessage timeout'));\n      }, _this.timeout || 20 * 1000);\n    });\n  });\n  _defineProperty(this, \"destroy\", function () {\n    _this.destroyed = true;\n    if (_this.unListen) {\n      _this.unListen();\n      _this.unListen = null;\n    }\n    _this.listener = null;\n    _this.messageResponse = null;\n    if (_this.messageProxy) {\n      _this.messageProxy.destroy();\n      _this.messageProxy = null;\n    }\n  });\n  this.type = type;\n  this.messageProxy = messageProxy;\n  this.listener = null;\n  this.messageResponse = {};\n  this.timeout = timeout;\n  this.unListen = this.messageProxy.listen(this.receiveMessage);\n});\n\n/* eslint-disable no-underscore-dangle */\nvar CLIENT_KEY$1 = 'postmessage-promise_client';\nvar SERVER_KEY = 'postmessage-promise_server';\nvar IDENTITY_KEY$1 = 'identity_key';\nvar identityMap = {\n  server: {\n    key: SERVER_KEY,\n    accept: CLIENT_KEY$1\n  },\n  client: {\n    key: CLIENT_KEY$1,\n    accept: SERVER_KEY\n  }\n};\nvar MessageProxy = /*#__PURE__*/_createClass(function MessageProxy(type, sourceInfo, eventFilter) {\n  var _this2 = this;\n  _classCallCheck(this, MessageProxy);\n  _defineProperty(this, \"listen\", function (fn) {\n    var _this = _this2;\n    var listener = function listener(event) {\n      if (_this.origin !== '*' && event.origin !== _this.origin || event.source !== _this.source || !event.data || event.data[IDENTITY_KEY$1] !== identityMap[_this.type].accept || event.data.channelId !== _this.channelId || !_this.eventFilter(event) || !event.data.method) {\n        return;\n      }\n      var _event$data = event.data,\n        eventId = _event$data.eventId,\n        method = _event$data.method,\n        payload = _event$data.payload;\n      fn(method, eventId, payload);\n    };\n    window.addEventListener('message', listener);\n    return function unListen() {\n      window.removeEventListener('message', listener);\n    };\n  });\n  _defineProperty(this, \"request\", function (method, eventId, payload) {\n    if (!_this2.source || _this2.source.closed) {\n      console.error('source closed.');\n      return;\n    }\n    _this2.source.postMessage(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, IDENTITY_KEY$1, identityMap[_this2.type].key), \"channelId\", _this2.channelId), \"eventId\", eventId), \"method\", method), \"payload\", payload), _this2.origin);\n  });\n  _defineProperty(this, \"destroy\", function () {\n    _this2.type = '';\n    _this2.origin = '';\n    _this2.source = null;\n    _this2.channelId = '';\n    _this2.eventFilter = null;\n  });\n  this.type = type;\n  var origin = sourceInfo.origin,\n    source = sourceInfo.source,\n    channelId = sourceInfo.channelId;\n  this.origin = origin;\n  this.source = source;\n  this.channelId = channelId;\n  this.eventFilter = eventFilter;\n});\n\nfunction ownKeys$1(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread$1(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys$1(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$1(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction connectServer(sourceInfo, clientProxy, timeout, clientInfo) {\n  return new Promise(function (resolve, reject) {\n    var server = sourceInfo.source,\n      origin = sourceInfo.origin,\n      channelId = sourceInfo.channelId;\n    var SYN = 1;\n    var ACK = 0;\n    var seqnumber = Number(Math.random().toString().substr(3, 10));\n    var timer = null;\n    var startTime = new Date();\n    var unListen = null;\n    function handShake(method, eventId) {\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (method === 'hand-shake') {\n        // 判断状态\n        var _ref = payload || {},\n          sSYN = _ref.SYN,\n          sACK = _ref.ACK,\n          sSeq = _ref.seqnumber,\n          acknumber = _ref.acknumber;\n        // console.log('client hand shake', payload);\n        if (sSYN === 1 && sACK === 1 && acknumber === seqnumber + 1) {\n          // this is server acknowledgement\n          clearInterval(timer);\n          if (unListen) {\n            unListen();\n          }\n          clientProxy.request('hand-shake', 'hand-shake-event', {\n            clientInfo: clientInfo,\n            ACK: 1,\n            seqnumber: seqnumber + 1,\n            acknumber: sSeq + 1\n          });\n          resolve({\n            server: server,\n            origin: origin,\n            channelId: channelId,\n            serverInfo: payload.serverInfo,\n            clientInfo: clientInfo\n          });\n        }\n      }\n    }\n    unListen = clientProxy.listen(handShake);\n    var tryConnect = function tryConnect() {\n      if (!server || server.closed) {\n        clearInterval(timer);\n        if (unListen) {\n          unListen();\n        }\n        reject(new Error('server closed.'));\n        throw new Error('server closed.');\n      }\n      if (timeout) {\n        var endTime = new Date();\n        var usedTime = endTime - startTime;\n        if (usedTime > timeout) {\n          clearInterval(timer);\n          if (unListen) {\n            unListen();\n          }\n          reject(new Error('connect timeout.'));\n          throw new Error('connect timeout.');\n        }\n      }\n      clientProxy.request('hand-shake', 'hand-shake-event', {\n        clientInfo: clientInfo,\n        SYN: SYN,\n        ACK: ACK,\n        seqnumber: seqnumber\n      });\n    };\n    timer = setInterval(tryConnect, 100);\n  });\n}\n/**\n * create a message channel based on the channelId.\n * @param {*} clientInfo\n */\nfunction createChannel$1(serverProps, clientProxy, timeout) {\n  var server = serverProps.server,\n    _serverProps$serverIn = serverProps.serverInfo,\n    serverInfo = _serverProps$serverIn === void 0 ? {} : _serverProps$serverIn,\n    channelId = serverProps.channelId;\n  var messageChannel = new MessageChannel('client', clientProxy, timeout);\n  var destroy = function destroy() {\n    if (messageChannel) {\n      messageChannel.destroy();\n      messageChannel = null;\n    }\n    if (serverProps.destroy) {\n      serverProps.destroy();\n    }\n  };\n  // daemon\n  var watcher = null;\n  function watch() {\n    if (!server || server.closed) {\n      console.info('server closed.');\n      clearInterval(watcher);\n      destroy();\n    }\n  }\n  watcher = setInterval(watch, 2000);\n  return {\n    run: function run(resolve) {\n      resolve({\n        channelId: channelId,\n        serverInfo: serverInfo,\n        postMessage: function postMessage() {\n          if (messageChannel) {\n            var _messageChannel;\n            return (_messageChannel = messageChannel).postMessage.apply(_messageChannel, arguments);\n          }\n          return Promise.reject();\n        },\n        listenMessage: function listenMessage() {\n          if (messageChannel) {\n            var _messageChannel2;\n            (_messageChannel2 = messageChannel).listenMessage.apply(_messageChannel2, arguments);\n          }\n        },\n        destroy: destroy\n      });\n    }\n  };\n}\n\n/**\n * connect with server and create message channel\n * @param {*} serverObject\n * @param {*} options : { eventFilter, timeout } filter post messages\n */\nfunction callServer(serverObject) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!serverObject) throw new Error('serverObject is null');\n  var server = serverObject.server,\n    origin = serverObject.origin;\n  var _options$eventFilter = options.eventFilter,\n    eventFilter = _options$eventFilter === void 0 ? function () {\n      return true;\n    } : _options$eventFilter,\n    _options$timeout = options.timeout,\n    timeout = _options$timeout === void 0 ? 20 * 1000 : _options$timeout,\n    _options$clientInfo = options.clientInfo,\n    clientInfo = _options$clientInfo === void 0 ? {} : _options$clientInfo,\n    onDestroy = options.onDestroy;\n  var channelId = Math.random().toString().substr(3, 10);\n  var sourceInfo = {\n    source: server,\n    origin: origin,\n    channelId: channelId\n  };\n  return new Promise(function (resolve, reject) {\n    if (!server || server.closed) {\n      reject(new Error('server closed'));\n      return;\n    }\n    var clientProxy = new MessageProxy('client', sourceInfo, eventFilter);\n    connectServer(sourceInfo, clientProxy, timeout, clientInfo).then(function (sProps) {\n      var serverProps = _objectSpread$1(_objectSpread$1({}, sProps), {}, {\n        destroy: function destroy() {\n          clientProxy = null;\n          if (onDestroy) {\n            onDestroy(sProps.serverInfo, sProps);\n          }\n        }\n      });\n      createChannel$1(serverProps, clientProxy, timeout).run(resolve);\n    })[\"catch\"](function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar CLIENT_KEY = 'postmessage-promise_client';\nvar IDENTITY_KEY = 'identity_key';\nvar TCP_TIMEOUT_INIT = 1000; // RFC6298 2.1 initial RTO value\nvar TCP_SYNACK_RETRIES = 5;\nfunction connectClient(eventFilter, serverInfo) {\n  return new Promise(function (resolve) {\n    var waitingType = 'syn'; // ack // finish\n    var SYN = 1;\n    var ACK = 1;\n    var seqnumber = Number(Math.random().toString().substr(3, 10));\n    var cSeqnumber = -1;\n    var timer = null;\n    var retries = TCP_SYNACK_RETRIES;\n    function handShake(event) {\n      if (!event.data || event.data[IDENTITY_KEY] !== CLIENT_KEY || !event.data.channelId || !event.data.method || event.data.method !== 'hand-shake' || !eventFilter(event)) {\n        return;\n      }\n      // 判断状态\n      var _ref = event.data.payload || {},\n        cSYN = _ref.SYN,\n        cACK = _ref.ACK,\n        cSeq = _ref.seqnumber,\n        cAcknumber = _ref.acknumber;\n      // console.log('server hand shake', event.data, waitingType, retries);\n      if (cSYN === 1 && cACK === 0) {\n        if (waitingType !== 'syn') {\n          return; // this is a syn timeout request\n        }\n        cSeqnumber = cSeq;\n        // client synchronous\n        waitingType = 'ack';\n        var fn = function fn() {\n          if (!event.source || event.source.closed) {\n            console.info('client closed and reset to listening.');\n            waitingType = 'syn';\n            clearTimeout(timer);\n            timer = null;\n            retries = TCP_SYNACK_RETRIES;\n            seqnumber = Number(Math.random().toString().substr(3, 10));\n            cSeqnumber = -1;\n            return false;\n          }\n          try {\n            event.source.postMessage(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, IDENTITY_KEY, 'postmessage-promise_server'), \"channelId\", event.data.channelId), \"method\", 'hand-shake'), \"payload\", {\n              serverInfo: serverInfo,\n              acknumber: cSeq + 1,\n              SYN: SYN,\n              ACK: ACK,\n              seqnumber: seqnumber\n            }), event.origin);\n          } catch (e) {\n            console.error(e);\n            return true;\n          }\n          return true;\n        };\n        var tryAck = fn();\n        if (!tryAck) return;\n        var retryFn = function retryFn() {\n          if (retries > 0) {\n            // waitingType = 'syn';\n            if (waitingType === 'ack') {\n              // eslint-disable-next-line operator-assignment\n              retries = retries - 1;\n              if (fn()) {\n                timer = setTimeout(retryFn, TCP_TIMEOUT_INIT);\n              }\n            }\n          } else {\n            // reset to a new listening\n            console.info('server three-way hand shake timeout and reset to listening.');\n            waitingType = 'syn';\n            clearTimeout(timer);\n            timer = null;\n            retries = TCP_SYNACK_RETRIES;\n            seqnumber = Number(Math.random().toString().substr(3, 10));\n            cSeqnumber = -1;\n          }\n        };\n        // TCP_TIMEOUT_INIT: waiting for the third hand shake until timeout.\n        if (!timer) {\n          timer = setTimeout(retryFn, TCP_TIMEOUT_INIT);\n        }\n      } else if (waitingType === 'ack') {\n        if (cACK === 1 && cSeq === cSeqnumber + 1 && cAcknumber === seqnumber + 1) {\n          // waiting for the third hand shake.\n          waitingType = 'finish';\n          clearTimeout(timer);\n          timer = null;\n          // client acknowledgement\n          window.removeEventListener('message', handShake);\n          var _event$data$payload = event.data.payload,\n            payload = _event$data$payload === void 0 ? {} : _event$data$payload;\n          resolve({\n            client: event.source,\n            origin: event.origin,\n            channelId: event.data.channelId,\n            serverInfo: serverInfo,\n            clientInfo: payload.clientInfo\n          });\n        }\n      } else ;\n    }\n    window.addEventListener('message', handShake);\n  });\n}\n/**\n * create a message channel based on the channelId.\n * @param {*} clientInfo\n */\nfunction createChannel(clientProps, eventFilter, timeout) {\n  var origin = clientProps.origin,\n    client = clientProps.client,\n    channelId = clientProps.channelId,\n    _clientProps$clientIn = clientProps.clientInfo,\n    clientInfo = _clientProps$clientIn === void 0 ? {} : _clientProps$clientIn;\n  var sourceInfo = {\n    origin: origin,\n    source: client,\n    channelId: channelId\n  };\n  var serverProxy = new MessageProxy('server', sourceInfo, eventFilter);\n  var messageChannel = new MessageChannel('server', serverProxy, timeout);\n  var destroy = function destroy() {\n    if (messageChannel) {\n      messageChannel.destroy();\n      messageChannel = null;\n    }\n    serverProxy = null;\n    if (clientProps.destroy) {\n      clientProps.destroy();\n    }\n  };\n  // daemon\n  var watcher = null;\n  function watch() {\n    if (!client || client.closed) {\n      console.info('client closed.');\n      clearInterval(watcher);\n      destroy();\n    }\n  }\n  watcher = setInterval(watch, 2000);\n  return {\n    run: function run(resolve) {\n      resolve({\n        channelId: channelId,\n        clientInfo: clientInfo,\n        postMessage: function postMessage() {\n          if (messageChannel) {\n            var _messageChannel;\n            return (_messageChannel = messageChannel).postMessage.apply(_messageChannel, arguments);\n          }\n          return Promise.reject();\n        },\n        listenMessage: function listenMessage() {\n          if (messageChannel) {\n            var _messageChannel2;\n            (_messageChannel2 = messageChannel).listenMessage.apply(_messageChannel2, arguments);\n          }\n        },\n        destroy: destroy\n      });\n    }\n  };\n}\n\n/**\n * start a server listening, each server listening can only connect with one client.\n * @param {*} options: { eventFilter, timeout } filter post messages\n */\nfunction startListening() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$eventFilter = options.eventFilter,\n    eventFilter = _options$eventFilter === void 0 ? function () {\n      return true;\n    } : _options$eventFilter,\n    _options$timeout = options.timeout,\n    timeout = _options$timeout === void 0 ? 20 * 1000 : _options$timeout,\n    _options$serverInfo = options.serverInfo,\n    serverInfo = _options$serverInfo === void 0 ? {} : _options$serverInfo,\n    onDestroy = options.onDestroy;\n  return new Promise(function (resolve) {\n    connectClient(eventFilter, serverInfo).then(function (cProps) {\n      var clientProps = _objectSpread(_objectSpread({}, cProps), {}, {\n        destroy: function destroy() {\n          if (onDestroy) {\n            onDestroy(cProps.clientInfo, cProps);\n          }\n        }\n      });\n      createChannel(clientProps, eventFilter, timeout).run(resolve);\n    });\n  });\n}\n\n/**\n * Takes a URL and returns the origin. from dollarshaveclub/postmate\n * @param  {String} url The full URL being requested\n * @return {String}     The URLs origin\n */\nfunction resolveOrigin(url) {\n  var a = document.createElement('a');\n  a.href = url;\n  var protocol = a.protocol.length > 4 ? a.protocol : window.location.protocol;\n  // eslint-disable-next-line no-nested-ternary\n  var host = a.host.length ? a.port === '80' || a.port === '443' ? a.hostname : a.host : window.location.host;\n  return a.origin || \"\".concat(protocol, \"//\").concat(host);\n}\nfunction getIframeServer(container, targetUrl, name) {\n  var classListArray = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var root = typeof container !== 'undefined' ? container : document.body;\n  var origin = resolveOrigin(targetUrl);\n  var frame = document.createElement('iframe');\n  frame.name = name || '';\n  // eslint-disable-next-line prefer-spread\n  frame.classList.add.apply(frame.classList, classListArray);\n  root.appendChild(frame);\n  frame.src = targetUrl;\n  var iframeWindow = frame.contentWindow || frame.contentDocument.parentWindow;\n  return {\n    server: iframeWindow,\n    origin: origin,\n    frame: frame\n    // destroy: () => { if (frame) { frame.parentNode.removeChild(frame); } }\n  };\n}\nfunction getOpenedServer(targetUrl) {\n  var _window;\n  // window.opener.origin inaccessible when cross-origin\n  var origin = resolveOrigin(targetUrl);\n  for (var _len = arguments.length, opts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    opts[_key - 1] = arguments[_key];\n  }\n  var openedWindow = (_window = window).open.apply(_window, [targetUrl].concat(opts));\n  return {\n    server: openedWindow,\n    origin: origin\n    // destroy: () => { if (openedWindow && openedWindow.close) { openedWindow.close(); } },\n  };\n}\nvar utils = {\n  resolveOrigin: resolveOrigin,\n  getIframeServer: getIframeServer,\n  getOpenedServer: getOpenedServer\n};\n\nvar index = {\n  callServer: callServer,\n  startListening: startListening,\n  utils: utils\n};\n\nexport { callServer, index as default, startListening, utils };\n","module.exports = require('./lib/type');\n","/*\n * boolify-string\n * https://github.com/sanemat/node-boolify-string\n *\n * Copyright (c) 2014 sanemat\n * Licensed under the MIT license.\n */\n\n'use strict';\nvar type = require('type-detect');\n\nmodule.exports = function(obj){\n  if (type(obj) !== 'string') {\n    return !!obj;\n  }\n  var value = obj.toLowerCase();\n  var bool;\n  switch (value){\n    case 'false':\n    case '0':\n    case 'undefined':\n    case 'null':\n    case '':\n    case 'n':\n    case 'no':\n    case 'off':\n      bool = false;\n      break;\n    default:\n      bool = true;\n      break;\n  }\n  return bool;\n};\n","import boolifyString from 'boolify-string'\n\nexport function hasBooleanParam(url, param) {\n  url = typeof url === 'string' ? new URL(url, location) : url\n\n  const booleanString = url.searchParams.get(param)\n\n  if (booleanString === null) {\n    return false\n  }\n\n  if (booleanString === '') {\n    return true\n  }\n\n  return boolifyString(booleanString)\n}\n\nexport function stringIsUrl(string) {\n  try {\n    new URL(string, location)\n    return true\n  } catch {\n    return false\n  }\n}\n\n// This is a modified version of https://www.npmjs.com/package/escape-string-regexp\nexport function patternMatchesOrigin(pattern, origin) {\n\n  const escapedPattern = pattern\n    .replace(/[.]/g, '\\\\$&')\n    .replace(/-/g, '\\\\x2d')\n    .replace(/[*]/g, '.*')\n\n  return new RegExp(`^${escapedPattern}$`, 'u').test(origin)\n}","import { utils as postmessageUtils } from 'postmessage-promise'\nimport { hasBooleanParam } from '@/utils/url.js'\nimport { PREFIX, SERVER_MODE, SERVER_REQUEST_DEFAULT_TIMEOUT } from './constants.js'\n\n/**\n * Creates a prefixed event name for the BIB consent module.\n * @param {string} prefix - The prefix to use for the event name.\n * @returns {function(string): string} - A function that takes an event name and returns the prefixed event name.\n */\nexport function createPrefixedEventName(prefix) {\n  return function (eventName) {\n    return `bib:${prefix}:${eventName}`\n  }\n}\n\n/**\n * Creates a prefixed key name for the BIB consent module.\n * @param {string} key - The key to be prefixed.\n * @returns {string} - The prefixed key name.\n */\nexport function getKeyName(key) {\n  return `${PREFIX}-${key}`\n}\n\n/**\n * Gets an iframe server for a given target URL.\n * @param {HTMLElement} [container=document.body] - The container element for the iframe.\n * @param {string} targetUrl - The target URL for the iframe.\n * @returns {object} - An object containing the iframe server, origin, and the iframe element.\n */\nexport function getIframeServer(\n  container,\n  targetUrl,\n) {\n  const root = typeof container !== 'undefined' ? container : document.body\n  const origin = postmessageUtils.resolveOrigin(targetUrl)\n  const iframeId = getKeyName('iframe')\n  let iframe\n  if (document.querySelector(`#${iframeId}`)) {\n    iframe = document.querySelector(`#${iframeId}`)\n  } else {\n    iframe = document.createElement('iframe')\n    iframe.id = iframeId\n\n    const isDebugOn = hasBooleanParam(targetUrl, 'debug')\n\n    if (!isDebugOn) {\n      iframe.ariaHidden = true\n      iframe.tabIndex = -1\n      iframe.hidden = true\n      iframe.style.setProperty('display', 'none')\n    } else {\n      iframe.style.cssText = 'width: 100%; height: 100%; border: 0;'\n    }\n\n    root.appendChild(iframe)\n    iframe.src = targetUrl\n  }\n\n  const iframeWindow = iframe.contentWindow || iframe.contentDocument.parentWindow\n\n  return {\n    server: iframeWindow,\n    origin,\n    iframe,\n  }\n}\n\n/**\n * Checks the server mode for a given client.\n * \n * If the client has no server URL, the function returns `SERVER_MODE.LOCAL`.\n * Otherwise, it checks if the server page exists by making a fetch request to the server URL.\n * If the request is successful (response.ok), the function returns `SERVER_MODE.REMOTE`.\n * If the request times out or fails, the function throws an error with the appropriate message.\n *\n * @param {object} client - The client object containing the server URL.\n * @param {number} [timeout=SERVER_REQUEST_DEFAULT_TIMEOUT] - The timeout in milliseconds for the server request.\n * @returns {string} - The server mode, either `SERVER_MODE.LOCAL` or `SERVER_MODE.REMOTE`.\n * @throws {Error} - If the server page cannot be located or the request fails.\n */\nexport async function getServerMode(client) {\n\n  const serverUrl = client.serverUrl\n  const timeout = client.serverRequestTimeout || SERVER_REQUEST_DEFAULT_TIMEOUT\n\n  if (!serverUrl) {\n    return SERVER_MODE.LOCAL\n  }\n\n  // Check if server page exists\n  const controller = new AbortController()\n  let response\n  let timeoutHandle\n\n  try {\n    timeoutHandle = setTimeout(() => {\n      console.warn(`Request timed out after ${timeout}ms. Aborting request...`)\n      controller.abort()\n    }, timeout)\n    response = await fetch(serverUrl, { signal: controller.signal })\n\n    if (response.ok) {\n      return SERVER_MODE.REMOTE\n    }\n  } catch (error) {\n    console.error(error)\n\n    if (controller.signal.aborted) {\n      throw new Error(`Unable to locate server page. The request timed out after ${timeout}ms. url: ${serverUrl.href}`)\n    }\n\n    throw new Error(`Unable to locate server page : ${serverUrl.href}.`, error)\n  } finally {\n    clearTimeout(timeoutHandle)\n  }\n\n  throw new Error(`Unable to locate server page. The request failed with status code ${response.status}. url: ${serverUrl.href}`)\n}","import { name as PKG_NAME } from '../../../package.json'\nimport { createPrefixedEventName } from './utils.js'\n\nconst eventName = createPrefixedEventName('consent')\n\nexport const DB_NAME = `${PKG_NAME}/consent`\nexport const DB_VERSION = 1\nexport const DB_STORE_NAME = 'consent'\n\nexport const EVENT_NAMES = {\n  READY: eventName('ready'),\n  UPDATE: eventName('update'),\n}\n\nexport const PREFIX = 'bib-consent'\n\nexport const SERVER_DEFAULT_URL = 'https://bib.umontreal.ca/consent/server'\n\nexport const SERVER_MODE = {\n  LOCAL: 'local',\n  REMOTE: 'remote'\n}\n\nexport const SERVER_REQUEST_DEFAULT_TIMEOUT = 500\n\n/**\n * @typedef {('analytics_consent'|'functionality_consent'|'ad_consent')} consentTypes\n */\n\n/**\n * @typedef {('granted' | 'denied')} ConsentValues\n */\n\n/**\n * @type {object} Tokens\n * @property {string} analytics_consent\n * @property {string} functionality_consent\n * @property {string} ad_consent\n */\nexport const DEFAULT_PREFERENCES = {\n  analytics_consent: null,\n  functionality_consent: null,\n  ad_consent: null\n}\n\n/**\n * @typedef {('determinate'|'indeterminate')} consentStateTypes\n */\n\nexport const CONSENT_STATES = {\n  INDETERMINATE: 'indeterminate',\n  DETERMINATE: 'determinate'\n}"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","CLIENT_RESPONSE","SERVER_RESPONSE","responseMap","server","receive","post","client","KEY_METHODS","MessageChannel","type","messageProxy","timeout","_this","this","method","eventId","payload","messageResponse","response","listener","pload","request","console","warn","_ref","resolve","reject","e","indexOf","Promise","Error","concat","destroyed","ctimer","Math","random","toString","substr","doPost","clearTimeout","setTimeout","unListen","destroy","listen","receiveMessage","CLIENT_KEY$1","SERVER_KEY","IDENTITY_KEY$1","identityMap","accept","MessageProxy","sourceInfo","eventFilter","_this2","fn","event","origin","source","data","channelId","_event$data","window","addEventListener","removeEventListener","closed","postMessage","error","ownKeys$1","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread$1","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","callServer","serverObject","options","undefined","_options$eventFilter","_options$timeout","_options$clientInfo","clientInfo","onDestroy","clientProxy","seqnumber","Number","timer","startTime","Date","sSYN","SYN","sACK","ACK","sSeq","acknumber","clearInterval","serverInfo","setInterval","then","sProps","serverProps","_serverProps$serverIn","messageChannel","watcher","info","run","_messageChannel","listenMessage","_messageChannel2","ownKeys","_objectSpread","IDENTITY_KEY","startListening","_options$serverInfo","waitingType","cSeqnumber","retries","handShake","cSYN","cACK","cSeq","cAcknumber","retryFn","_event$data$payload","cProps","clientProps","_clientProps$clientIn","serverProxy","resolveOrigin","url","a","document","createElement","href","protocol","location","host","port","hostname","utils","getIframeServer","container","targetUrl","name","classListArray","root","body","frame","classList","add","appendChild","src","contentWindow","contentDocument","parentWindow","getOpenedServer","_window","_len","opts","Array","_key","open","require$$0","bool","toLowerCase","stringIsUrl","string","URL","patternMatchesOrigin","pattern","escapedPattern","replace","RegExp","test","createPrefixedEventName","prefix","eventName","getKeyName","PREFIX","postmessageUtils","iframeId","iframe","querySelector","id","param","booleanString","searchParams","get","boolifyString","style","cssText","ariaHidden","tabIndex","hidden","setProperty","async","getServerMode","serverUrl","serverRequestTimeout","SERVER_REQUEST_DEFAULT_TIMEOUT","SERVER_MODE","LOCAL","controller","AbortController","timeoutHandle","abort","fetch","signal","ok","REMOTE","aborted","status","DB_NAME","PKG_NAME","DB_VERSION","DB_STORE_NAME","EVENT_NAMES","READY","UPDATE","SERVER_DEFAULT_URL","DEFAULT_PREFERENCES","analytics_consent","functionality_consent","ad_consent","CONSENT_STATES","INDETERMINATE","DETERMINATE"],"mappings":"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","x_google_ignoreList":[0,1,2]}
{"version":3,"file":"bib-avis.js","sources":["../src/components/bib-avis/bib-avis.js","../src/icons/close_FILL0_wght400_GRAD0_opsz24.svg?raw","../src/utils/dom.js"],"sourcesContent":["import { Task } from '@lit/task'\nimport { LitElement, html, css, unsafeCSS } from 'lit'\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js'\nimport { openDB } from 'idb'\nimport { nodeIsEmpty } from '@/utils/dom.js'\nimport { addToGlobalBib } from '@/utils/bib.js'\nimport { DB_NAME, DB_STORE_NAME, DB_VERSION } from './constants.js'\nimport closeIcon from '../../icons/close_FILL0_wght400_GRAD0_opsz24.svg?raw'\nimport bibAvisStyles from './bib-avis.scss?inline'\n\nasync function hash(obj) {\n  const utf8 = new TextEncoder().encode(JSON.stringify(obj))\n  const hashBuffer = await crypto.subtle.digest('SHA-256', utf8)\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n  const hashHex = hashArray\n    .map((bytes) => bytes.toString(16).padStart(2, '0'))\n    .join('')\n  return hashHex\n}\n\n/**\n * Un avis\n * Affiche un avis\n */\nexport class BibAvis extends LitElement {\n  static properties = {\n    service: {\n      type: String\n    },\n    contexte: {\n      type: String,\n      default: 'site-web'\n    },\n    niveau: {\n      type: String\n    },\n    boutonFermer: {\n      type: Boolean,\n      attribute: 'bouton-fermer'\n    },\n    message: {\n      state: true\n    }\n  }\n\n  static styles = [\n    css`${unsafeCSS(bibAvisStyles)}`,\n    css`\n    `\n  ]\n\n  #avis\n  #db\n\n  constructor() {\n    super()\n\n    this.#avis = null\n    this.service = 'https://avis.bib.umontreal.ca'\n    this.contexte = 'site-web-dev'\n    this.niveau = 'important'\n    this.boutonFermer = false\n  }\n\n  #getAvis() {\n    return new Task(this, {\n      task: async ([service, contexte, niveau], { signal }) => {\n\n        const doGetAvis = new Promise(async (resolve, reject) => {\n          if (!nodeIsEmpty(this)) {\n            return resolve({ isLocal: true, message: this.innerHTML.split(/<!--\\?lit\\$\\d+\\$-->/).join('') })\n          }\n\n          const url = new URL(`${contexte}/${niveau}`, service)\n          const response = await fetch(url, {\n            headers: {\n              \"Accept\": \"application/json\",\n            },\n            signal\n          })\n            .catch(console.error)\n\n          if (!response.ok) {\n            return reject(new Error(response.status))\n          }\n\n          const { message } = await response.json()\n\n          resolve({ isLocal: false, message })\n        })\n\n        try {\n          const data = await doGetAvis\n          await this.#processAvis(data)\n        } catch (error) {\n          console.error('[#getAvis] An error occured: %o', error)\n        }\n\n        return data\n      },\n      args: () => [this.service, this.contexte, this.niveau]\n    })\n  }\n\n  async #processAvis(avis) {\n    if (!avis.message) {\n      this.setMessage(null)\n      return\n    }\n\n    if (!('indexedDB' in window)) {\n      this.setMessage(avis.message)\n      return\n    }\n\n    const db = this.#db = await openDB(DB_NAME, DB_VERSION, {\n      upgrade(db) {\n        // Checks if the object store exists:\n        if (!db.objectStoreNames.contains(DB_STORE_NAME)) {\n          db.createObjectStore(DB_STORE_NAME)\n        }\n      }\n    })\n\n    try {\n      const id = await hash(avis)\n      const storedAvis = await db.get(DB_STORE_NAME, id)\n      if (storedAvis) {\n        if (!storedAvis.hidden) {\n          // Delete old entries\n          await db.delete(DB_STORE_NAME, id)\n          this.#show(storedAvis)\n        }\n      } else {\n        this.#show(avis)\n      }\n    } catch (error) {\n      console.error('Something went wrong with indexedDB: %o', error)\n      this.setMessage(avis.message)\n    }\n  }\n\n  async #show(avis) {\n\n    const canceled = !this.dispatchEvent(new CustomEvent('bib:show', { bubbles: true, cancelable: true }))\n\n    if (canceled) {\n      return\n    }\n\n    this.setMessage(avis)\n\n    if (this.#db) {\n      const id = await hash(avis)\n      await this.#db.put(DB_STORE_NAME, { ...avis, hidden: false }, id)\n    }\n  }\n\n  async #hide() {\n\n    const canceled = !this.dispatchEvent(new CustomEvent('bib:hide', { bubbles: true, cancelable: true }))\n\n    if (canceled) {\n      return\n    }\n\n    const id = await hash(this.#avis)\n    await this.#db.put(DB_STORE_NAME, { ...this.#avis, hidden: true }, id)\n    this.#avis = null\n    this.requestUpdate()\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.#getAvis()\n  }\n\n  #onBtnFermerClick() {\n    this.#hide()\n  }\n\n  _renderBoutonFermer() {\n    return this.boutonFermer ? html`<button class=\"btn-close\" aria-label=\"Fermer\" @click=\"${this.#onBtnFermerClick}\">${unsafeHTML(closeIcon)}</button>` : null\n  }\n\n  _avisTask = new Task(this, {\n    task: async ([service, contexte, niveau], { signal }) => {\n      const url = new URL(`${contexte}/${niveau}`, service)\n      const response = await fetch(url, {\n        headers: {\n          \"Accept\": \"application/json\",\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        signal\n      })\n      if (!response.ok) {\n        throw new Error(response.status)\n      }\n      return response.json()\n    },\n    args: () => [this.service, this.contexte, this.niveau]\n  })\n\n  render() {\n    return this.#avis?.message ? html`<aside class=\"container\"><div class=\"inner\"><div class=\"message\">${unsafeHTML(this.#avis.message)}</div>${this._renderBoutonFermer()}</div></aside>` : null\n  }\n\n  setMessage(message) {\n    this.#avis = typeof message === 'string' ? { message, isLocal: true } : message\n  }\n}\n\nif (!window.customElements.get('bib-avis')) {\n  window.customElements.define('bib-avis', BibAvis)\n}\n\naddToGlobalBib('avis', {})","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24\\\"><path d=\\\"M480-424 284-228q-11 11-28 11t-28-11q-11-11-11-28t11-28l196-196-196-196q-11-11-11-28t11-28q11-11 28-11t28 11l196 196 196-196q11-11 28-11t28 11q11 11 11 28t-11 28L536-480l196 196q11 11 11 28t-11 28q-11 11-28 11t-28-11L480-424Z\\\"/></svg>\"","export function nodeIsEmpty(node) {\n  return node.textContent.trim() === \"\"\n}"],"names":["async","hash","obj","utf8","TextEncoder","encode","JSON","stringify","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","bytes","toString","padStart","join","BibAvis","LitElement","constructor","super","this","avis","db","_avisTask","Task","task","service","contexte","niveau","signal","url","URL","response","fetch","headers","Accept","ok","Error","status","json","args","boutonFermer","connectedCallback","html","onBtnFermerClick","unsafeHTML","message","_renderBoutonFermer","isLocal","getAvis","doGetAvis","Promise","resolve","reject","textContent","trim","innerHTML","split","catch","console","error","data","processAvis","setMessage","window","openDB","DB_NAME","DB_VERSION","objectStoreNames","contains","DB_STORE_NAME","createObjectStore","id","storedAvis","get","hidden","delete","show","dispatchEvent","CustomEvent","bubbles","cancelable","put","hide","requestUpdate","static","type","String","default","Boolean","attribute","state","css","unsafeCSS","customElements","define","addToGlobalBib"],"mappings":"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"}
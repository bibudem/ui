/**
 * Librairie du system desing des Bibliothèques de l'Université de Montréal
 * @module @bibudem/ui
 * @version 1.3.1
 * @author Christian Rémillard <christian.remillard@umontreal.ca>
 * @license ISC
 * @see https://github.com/bibudem/ui
 */
var e,t,s,r,o=Object.defineProperty,n=e=>{throw TypeError(e)},i=(e,t,s)=>((e,t,s)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s),a=(e,t,s)=>t.has(e)||n("Cannot "+s),h=(e,t,s)=>(a(e,t,"read from private field"),s?s.call(e):t.get(e)),c=(e,t,s)=>t.has(e)?n("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,s),d=(e,t,s,r)=>(a(e,t,"write to private field"),r?r.call(e,s):t.set(e,s),s);const l=require("./url-y47v7naU.cjs"),E=require("./logger-BXGZV0ek.cjs"),v=require("./ConsentStorage.cjs"),u=require("./ConsentTokens.cjs"),g=require("./utils.cjs"),T=require("./constants2.cjs");class m extends EventTarget{constructor(){super(),c(this,s),i(this,"_server"),i(this,"_storage"),c(this,e,!1),c(this,t),this.readyState="initial",this.hosts=[]}addHost({host:e,reflectEvents:t}){this.hosts.push({host:e,reflectEvents:t})}debug(){h(this,e)&&h(this,t).call(this,...arguments)}dispatchEvent(e){super.dispatchEvent(e)}addEventListener(e,t,o){if(e===T.EVENT_NAMES.READY&&"ready"===this.readyState)return this.debug("Firing ready event immediately since readyState is already ready"),void(n=this,i=s,h=r,a(n,i,"access private method"),h).call(this,t);var n,i,h;super.addEventListener(e,t,o)}async init({host:s,serverMode:r,serverUrl:o,serverRequestTimeout:n=T.SERVER_REQUEST_DEFAULT_TIMEOUT,reflectEvents:i=!0}){let a;if(this.serverRequestTimeout=n,s&&this.addHost({host:s,reflectEvents:i}),this.readyState="connecting",r&&r===T.SERVER_MODE.LOCAL||void 0===o||!l.stringIsUrl(o)?this.serverMode=T.SERVER_MODE.LOCAL:(this.serverUrl=new URL(o,location),s.debug&&this.serverUrl.searchParams.set("debug",""),this.serverMode=await g.getServerMode(this)),d(this,e,!!s.debug),h(this,e)&&d(this,t,E.loggerFactory("consentClient","purple")),this.debug("init",`server mode: ${this.serverMode}`),this.serverMode===T.SERVER_MODE.REMOTE){const e=g.getIframeServer(document.body,this.serverUrl.href);try{this._server=await l.callServer(e),this._server.listenMessage(((e,t)=>{const s=u.ConsentTokens.from(t),r=new CustomEvent(T.EVENT_NAMES.CHANGE,{detail:s,bubbles:!0,composed:!0});this.dispatchEvent(r)}))}catch(c){throw console.error("[callServer] error: ",c),c}console.log("[consentClient] Server mode: %s",this.serverMode),console.log("[consentClient] Remote consent server URL: %s",this.serverUrl.href),console.log("[consentClient] this._server:",this._server),a=u.ConsentTokens.from(await this._server.postMessage("getConsentTokens")),this.debug("[remote] Got response from server: ",a)}else this._storage=await v(),a=await this._storage.getConsentTokens(),this.debug("[local] Got response from storage: ",a);this.debug("[local] consentTokens: ",a),void 0!==a&&(this.readyState="ready",this.dispatchEvent(new CustomEvent(T.EVENT_NAMES.READY,{detail:a,bubbles:!0,composed:!0})))}async getConsentTokens(){try{return this.serverMode===T.SERVER_MODE.LOCAL?await this._storage.getConsentTokens():u.ConsentTokens.from(await this._server.postMessage("getConsentTokens"))}catch(e){throw console.error("[#getConsentTokens]",e),e}}async setConsentTokens(e){try{let t;const s=u.ConsentTokens.from(e);if(t=this.serverMode===T.SERVER_MODE.LOCAL?await this._storage.setConsentTokens(s):await this._server.postMessage("setConsentTokens",s),t)return this.dispatchEvent(new CustomEvent(T.EVENT_NAMES.CHANGE,{detail:t,bubbles:!0,composed:!0})),t}catch(t){throw console.error("[#setConsentTokens]",t),t}}async resetTokens(){try{if(this.serverMode===T.SERVER_MODE.LOCAL)return await this._storage.resetTokens();await this._server.postMessage("resetTokens")}catch(e){throw console.error("[#resetTokens]",e),e}}}let C;e=new WeakMap,t=new WeakMap,s=new WeakSet,r=async function(e){const t=await this.getConsentTokens(),s=new CustomEvent(T.EVENT_NAMES.READY,{detail:t,bubbles:!0,composed:!0});this.debug("Firing ready event with preferences: ",t),e(s)},module.exports=async function(e){return C?(C.addHost(e),C):(C=new m,await C.init(e),C)};
//# sourceMappingURL=consentClient.cjs.map

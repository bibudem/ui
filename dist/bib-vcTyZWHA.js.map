{"version":3,"file":"bib-vcTyZWHA.js","sources":["../node_modules/lodash-es/identity.js","../node_modules/lodash-es/_baseCreate.js","../node_modules/lodash-es/_shortOut.js","../node_modules/lodash-es/_defineProperty.js","../node_modules/lodash-es/_baseSetToString.js","../node_modules/lodash-es/constant.js","../node_modules/lodash-es/_setToString.js","../node_modules/lodash-es/_baseAssignValue.js","../node_modules/lodash-es/_assignValue.js","../node_modules/lodash-es/_overRest.js","../node_modules/lodash-es/_baseKeysIn.js","../node_modules/lodash-es/keysIn.js","../node_modules/lodash-es/_nativeKeysIn.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/isPlainObject.js","../node_modules/lodash-es/_cloneBuffer.js","../node_modules/lodash-es/_assignMergeValue.js","../node_modules/lodash-es/_safeGet.js","../node_modules/lodash-es/_baseMerge.js","../node_modules/lodash-es/_createBaseFor.js","../node_modules/lodash-es/_baseMergeDeep.js","../node_modules/lodash-es/_cloneTypedArray.js","../node_modules/lodash-es/_cloneArrayBuffer.js","../node_modules/lodash-es/isArrayLikeObject.js","../node_modules/lodash-es/_copyArray.js","../node_modules/lodash-es/toPlainObject.js","../node_modules/lodash-es/_copyObject.js","../node_modules/lodash-es/_initCloneObject.js","../node_modules/lodash-es/merge.js","../node_modules/lodash-es/_createAssigner.js","../node_modules/lodash-es/_baseRest.js","../node_modules/lodash-es/_apply.js","../node_modules/lodash-es/_isIterateeCall.js","../src/utils/bib.js"],"sourcesContent":["/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n","import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import { isObject, merge } from 'lodash-es'\nimport pkg from '../../package.json'\n\nexport function addToGlobalBib(prop, value) {\n  const bib = globalThis.bib ?? (globalThis.bib = {})\n  if (typeof bib[prop] === 'undefined') {\n    if (isObject(value)) {\n      bib[prop] = merge({}, bib[prop], value, { version: pkg.version })\n    } else {\n      bib[prop] = value\n    }\n  }\n}"],"names":["identity","value","func","count","lastCalled","objectCreate","Object","create","baseCreate","object","proto","isObject","prototype","result","undefined","nativeNow","Date","now","defineProperty","getNative","e","baseSetToString","string","configurable","enumerable","writable","setToString","stamp","remaining","arguments","apply","baseAssignValue","key","hasOwnProperty","assignValue","objValue","call","eq","nativeMax","Math","max","keysIn","isArrayLike","arrayLikeKeys","push","isProto","isPrototype","getPrototype","overArg","getPrototypeOf","objectTag","funcProto","Function","objectProto","funcToString","toString","objectCtorString","freeExports","exports","nodeType","freeModule","module","Buffer","root","assignMergeValue","safeGet","baseMerge","source","srcIndex","customizer","stack","iteratee","keysFunc","index","iterable","props","length","srcValue","Stack","mergeFunc","typedArray","arrayBuffer","buffer","stacked","get","newValue","isCommon","isArr","isArray","isBuff","isBuffer","isTyped","isTypedArray","isObjectLike","array","Array","slice","constructor","byteLength","Uint8Array","set","byteOffset","baseGetTag","Ctor","isArguments","isNew","isFunction","allocUnsafe","assigner","merge","start","transform","args","otherArgs","thisArg","this","baseRest","sources","guard","type","isIndex","addToGlobalBib","prop","bib","globalThis","version","pkg"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]}
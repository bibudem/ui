{"version":3,"file":"bib-clarity.cjs","sources":["../src/components/bib-clarity/bib-clarity.js"],"sourcesContent":["import { css, LitElement, unsafeCSS } from 'lit'\nimport Clarity from '@microsoft/clarity'\nimport { addToGlobalBib } from '@/utils/bib.js'\nimport { dispatchPublicEvent } from '@/utils/events.js'\nimport ConsentTokenV2 from './ConsentTokenV2.js'\nimport { CLARITY_PROJECT_ID, READY_STATES } from './constants.js'\nimport { EVENT_NAMES } from '../bib-consent/constants.js'\nimport styles from './bib-clarity.scss?inline'\n\nfunction toClarityConsent(granted) {\n  if (granted === null) {\n    return null\n  }\n\n  return granted === 'granted'\n}\n\n/**\n * Custom element that manages the loading and updating of Microsoft Clarity tracking code on a web page.\n *\n * @class BibClarity\n * @extends LitElement\n * @property {String} projectId - The ID of the Microsoft Clarity project.\n * @property {Boolean} hidden - Indicates whether the component is hidden.\n * @property {Boolean} #consent - Indicates whether Microsoft Clarity tracking is enabled.\n * @property {String} readyState - The current state of the BibClarity component, which can be one of the following values:\n *   - `indeterminate`: The user has not yet indicated their consent preferences.\n *   - `determinate`: The user has made their consent preferences.\n *   - `connected`: The user has granted consent and the component is connected.\n *   - `disconnected`: The user has not granted consent and the component is disconnected.\n * @property {Clarity} clarity - The Microsoft Clarity instance.\n */\nexport class BibClarity extends LitElement {\n  #consent = null\n\n  static properties = {\n    projectId: {\n      type: String,\n      attribute: 'project-id'\n    },\n    hidden: {\n      type: Boolean\n    }\n  }\n\n  static styles = [\n    css`${unsafeCSS(styles)}`\n  ]\n\n  constructor() {\n    super()\n\n    this.hidden = true\n    this.projectId = this.projectId || CLARITY_PROJECT_ID\n    this.clarity = Clarity\n    this.#init()\n  }\n\n  /**\n   * Initializes the component.\n   *\n   * @private\n   */\n  async #init() {\n    const self = this\n\n    async function consentListener(event) {\n      console.log(`<bib-clarity> recieved an event from <bib-consent>: ${event.type}`, event.detail)\n\n      const consentData = event.detail\n\n      if (consentData === null) {\n        self.setConsent(false)\n        return\n      }\n\n      const { analytics_consent, ad_consent } = consentData\n\n      if (self.readyState === READY_STATES.INDETERMINATE) {\n        self.readyState = READY_STATES.CONNECTED\n      }\n\n      self.setConsent({ analytics_consent, ad_consent })\n    }\n\n    this.clarity.init(this.projectId)\n\n    // Push the rest to the next tick\n    // Clarity should have been initialized by then\n    setTimeout(async () => {\n      const bibConsentElem = document.querySelector('bib-consent')\n\n      if (bibConsentElem === null) {\n        // Aborting\n        console.info('No <bib-consent /> element found. Turning off Clarity tracking.')\n\n        // Turn off Clarity in case it was initially on\n        self.setConsent(false)\n\n      } else {\n\n        bibConsentElem.addEventListener(EVENT_NAMES.READY, consentListener)\n        bibConsentElem.addEventListener(EVENT_NAMES.CHANGE, consentListener)\n      }\n\n    })\n  }\n\n  #dispatchPublicEvent(name, detail = null) {\n    dispatchPublicEvent(this, name, { detail })\n  }\n\n  setConsent(consent) {\n    const consentToken = new ConsentTokenV2(consent)\n\n    if (JSON.stringify(this.#consent) === JSON.stringify(consentToken)) {\n      // No change, so no need to do anything or dispatch an event\n      return\n    }\n\n    console.log(`[bib-clarity] Setting consent to %o (was ${this.#consent === null ? 'not set' : this.#consent}).`, consentToken)\n\n    this.#consent = consentToken\n    // Using v2 API for now.\n    //See: https://learn.microsoft.com/en-us/clarity/setup-and-installation/clarity-consent-api-v2\n    // this.clarity.consent('consent', granted)\n    this.clarity.consent('consentv2', consentToken)\n    this.#dispatchPublicEvent(EVENT_NAMES.CHANGE, { detail: consentToken })\n  }\n}\n\nif (!window.customElements.get('bib-clarity')) {\n  window.customElements.define('bib-clarity', BibClarity)\n}\n\naddToGlobalBib('clarity', {})"],"names":["BibClarity","LitElement","constructor","this","__privateAdd","_r_instances","_t","hidden","projectId","CLARITY_PROJECT_ID","clarity","Clarity","init","setConsent","consent","consentToken","ConsentTokenV2","JSON","stringify","console","log","dispatchPublicEvent","EVENT_NAMES","CHANGE","detail","WeakSet","e_fn","self","async","consentListener","event","type","consentData","analytics_consent","ad_consent","readyState","READY_STATES","INDETERMINATE","CONNECTED","i","setTimeout","bibConsentElem","document","querySelector","info","addEventListener","READY","n_fn","name","static","String","attribute","Boolean","css","unsafeCSS","styles","window","customElements","get","define","addToGlobalBib"],"mappings":"+vBAgCO,MAAMA,UAAmBC,EAAAA,EAiB9B,WAAAC,GAGEC,QApBGC,EAAAD,KAAAE,GACMD,EAAAD,KAAAG,EAAA,MAmBTH,KAAKI,QAAS,EACdJ,KAAKK,UAAYL,KAAKK,WAAaC,EAAkBA,mBACrDN,KAAKO,QAAUC,EAAOA,QACtBR,OAAKS,EAALT,GAAAA,KAAAA,KACD,CAwDD,UAAAU,CAAWC,GACHC,MAAAA,EAAe,IAAIC,EAAeF,eAEpCG,KAAKC,UAAUf,EAAAA,KAAAA,MAAmBc,KAAKC,UAAUH,KAKrDI,QAAQC,IAAI,4CAA8D,OAAlBjB,EAAAA,KAAAA,GAAyB,UAAYA,OAAKW,OAAcC,KAEhGA,aAAhBZ,qDAIAA,KAAKO,QAAQI,QAAQ,YAAaC,GAClCZ,EAAAA,KAAKkB,KAALlB,KAA0BmB,KAAAA,EAAWA,YAACC,OAAQ,CAAEC,OAAQT,IACzD,EA/FDD,EAAAA,IAAAA,QADKT,EAAA,IAAAoB,QA+BLC,EAAMd,iBACJ,MAAMe,EAAOxB,KAEbyB,eAAeC,EAAgBC,GAC7BX,QAAQC,IAAI,uDAAuDU,EAAMC,OAAQD,EAAMN,QAEvF,MAAMQ,EAAcF,EAAMN,OAE1B,GAAoB,OAAhBQ,EAEF,YADAL,EAAKd,YAAW,GAIlB,MAAMoB,kBAAEA,EAAiBC,WAAEA,GAAeF,EAEtCL,EAAKQ,aAAeC,EAAYA,aAACC,gBACnCV,EAAKQ,WAAaC,EAAAA,aAAaE,WAGjCX,EAAKd,WAAW,CAAEoB,oBAAmBC,WACtCK,GAAA,CAEDpC,KAAKO,QAAQE,KAAKT,KAAKK,WAIvBgC,YAAWZ,UACHa,MAAAA,EAAiBC,SAASC,cAAc,eAE1CF,OAAAA,GAEFtB,QAAQyB,KAAK,mEAGbjB,EAAKd,iBAIL4B,EAAeI,iBAAiBvB,cAAYwB,MAAOjB,GACnDY,EAAeI,iBAAiBvB,cAAYC,OAAQM,GAAAA,GAIzD,EAEDkB,EAAA1B,SAAqB2B,EAAMxB,EAAS,MAClCH,EAAAA,oBAAoBlB,KAAM6C,EAAM,CAAExB,OAAAA,GACnC,EA3EDyB,EAHWjD,EAGXiD,aAAoB,CAClBzC,UAAW,CACTuB,KAAMmB,OACNC,UAAW,cAEb5C,OAAQ,CACNwB,KAAMqB,WAIVH,EAbWjD,EAaK,SAAA,CACdqD,EAAAA,CAAAA,GAAMC,EAAAA,EAAUC,EAAMA,YAqFrBC,OAAOC,eAAeC,IAAI,gBAC7BF,OAAOC,eAAeE,OAAO,cAAe3D,GAG9C4D,EAAcA,eAAC,UAAW,CAAE"}
{"version":3,"file":"bib-consent-consent-dialog.cjs","sources":["../src/components/bib-consent/bib-consent-consent-dialog.js"],"sourcesContent":["import { css, html, LitElement, unsafeCSS } from 'lit'\r\nimport { createRef, ref } from 'lit/directives/ref.js'\r\nimport './bib-consent-dialog.js'\r\nimport { DEFAULT_PREFERENCES } from './constants.js'\r\nimport styles from './bib-consent-consent-dialog.scss?inline'\r\n\r\n/**\r\n * Creates an object with all properties of `DEFAULT_PREFERENCES` set to the provided `value`.\r\n *\r\n * @param {boolean} value - The value to set for all properties in the returned object.\r\n * @returns {Object} An object with all properties of `DEFAULT_PREFERENCES` set to the provided `value`.\r\n */\r\nfunction all(value) {\r\n  return Object.keys(DEFAULT_PREFERENCES).reduce((prefs, prop) => ({ ...prefs, [prop]: value }), {})\r\n}\r\n\r\n/**\r\n * The `BibConsentConsentDialog` component creates a consent dialog for managing user preferences related to cookies and other tracking technologies.\r\n *\r\n * The component provides the following functionality:\r\n * - Displays a consent dialog with options to customize preferences, accept all, or reject all.\r\n * - Allows setting preferences by dispatching a `change` event with the new preferences.\r\n * - Provides methods to show, close, and display the preferences dialog.\r\n *\r\n * The component uses the `bib-consent-dialog` component to render the actual dialog.\r\n */\r\nexport class BibConsentConsentDialog extends LitElement {\r\n  static properties = {\r\n    debug: {\r\n      type: Boolean,\r\n      reflect: true\r\n    },\r\n    open: {\r\n      type: Boolean,\r\n      state: true\r\n    },\r\n  }\r\n\r\n  static styles = [\r\n    css`${unsafeCSS(styles)}`\r\n  ]\r\n\r\n  constructor() {\r\n    super()\r\n    this.open = false\r\n    this.dialogRef = createRef()\r\n  }\r\n\r\n  /**\r\n   * Sets the preferences for the consent dialog.\r\n   *\r\n   * @param {Object} preferences - An object containing the preferences to set.\r\n   * @emits change - Dispatches a custom event with the updated preferences.\r\n   */\r\n  setConsentTokens(preferences) {\r\n    this.dispatchEvent(new CustomEvent('intern:change', { detail: preferences }))\r\n  }\r\n\r\n  /**\r\n   * Shows the consent dialog if it is not already open.\r\n   */\r\n  show() {\r\n    if (this.dialogRef.value && !this.dialogRef.value.open) {\r\n      this.dialogRef.value?.show()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the consent dialog if it is currently open.\r\n   */\r\n  close() {\r\n    if (this.dialogRef.value && this.dialogRef.value.open) {\r\n      this.dialogRef.value?.close()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows the preferences dialog for the consent dialog.\r\n   *\r\n   * This method dispatches a custom 'show-preferences' event to notify other components that the preferences dialog should be shown.\r\n   */\r\n  showPreferences() {\r\n    this.dispatchEvent(new CustomEvent('intern:show-preferences'))\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <bib-consent-dialog class=\"consent-dialog\" ${ref(this.dialogRef)}>\r\n        <div class=\"title\" autofocus>\r\n          L’UdeM reconnaît l’importance de respecter la vie privée\r\n        </div>\r\n        <p>\r\n          Vos données personnelles sont utilisées pour enregistrer vos préférences, votre consentement et produire des statistiques anonymes.<br> Pour plus d'informations, veuillez consulter notre \r\n          <a href=\"https://vie-privee.umontreal.ca/confidentialite\" target=\"_blank\" rel=\"noopener noreferrer\">politique de confidentialité</a> \r\n          et nos \r\n          <a href=\"https://vie-privee.umontreal.ca/conditions-dutilisation\" target=\"_blank\" rel=\"noopener noreferrer\">conditions d’utilisation</a>.\r\n        </p>\r\n        <div class=\"actions-container\">\r\n          <a href=\"#\" @click=\"${() => this.showPreferences()}\" class=\"consent-link\">Personnaliser les témoins</a>\r\n          <button class=\"btn--outlined\" type=\"button\" @click=\"${() => this.setConsentTokens(false)}\">Tout refuser</button>\r\n          <button class=\"btn--filled\" type=\"button\" @click=\"${() => this.setConsentTokens(true)}\">Tout accepter</button>\r\n        </div>\r\n      </bib-consent-dialog>\r\n    `\r\n  }\r\n}\r\n\r\nif (!window.customElements.get('bib-consent-consent-dialog')) {\r\n  window.customElements.define('bib-consent-consent-dialog', BibConsentConsentDialog)\r\n}"],"names":["BibConsentConsentDialog","LitElement","constructor","super","this","open","dialogRef","createRef","setConsentTokens","preferences","dispatchEvent","CustomEvent","detail","show","value","close","showPreferences","render","html","x","ref","static","debug","type","Boolean","reflect","state","css","unsafeCSS","window","customElements","get","define"],"mappings":"+UA0BO,MAAMA,UAAgCC,EAAAA,EAgB3C,WAAAC,GACEC,QACAC,KAAKC,QACLD,KAAKE,UAAYC,KAClB,CAQD,gBAAAC,CAAiBC,GACVC,KAAAA,cAAc,IAAIC,YAAY,gBAAiB,CAAEC,OAAQH,IAC/D,CAKD,IAAAI,GACWP,KAAAA,UAAUQ,QAAUV,KAAKE,UAAUQ,MAAMT,MAChDD,KAAKE,UAAUQ,OAAOD,MAEzB,CAKD,KAAAE,GACWT,KAAAA,UAAUQ,OAASV,KAAKE,UAAUQ,MAAMT,MAC/CD,KAAKE,UAAUQ,OAAOC,OAEzB,CAOD,eAAAC,GACEZ,KAAKM,cAAc,IAAIC,YAAY,2BACpC,CAED,MAAAM,GACSC,OAAAA,EAAIC,+CACoCC,EAAAA,EAAIhB,KAAKE,knBAW5B,IAAMF,KAAKY,6HACqB,IAAMZ,KAAKI,kBAAAA,+EACb,IAAMJ,KAAKI,kBAAAA,uDAItE,EA7EDa,EADWrB,EACXqB,aAAoB,CAClBC,MAAO,CACLC,KAAMC,QACNC,SAAAA,GAEFpB,KAAM,CACJkB,KAAMC,QACNE,OAAO,KAIXL,EAZWrB,EAYK,SAAA,CACd2B,EAAAA,IAAMC,EAAAA,8iKAoELC,OAAOC,eAAeC,IAAI,+BAC7BF,OAAOC,eAAeE,OAAO,6BAA8BhC"}
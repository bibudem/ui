{"version":3,"file":"ConsentTokens.js","sources":["../node_modules/lodash-es/isBoolean.js","../src/components/bib-consent/ConsentTokens.js"],"sourcesContent":["import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nexport default isBoolean;\n","import { isBoolean, isObject } from 'lodash-es'\nimport { DEFAULT_PREFERENCES, CONSENT_STATES } from './constants.js'\n\nconst keys = Object.keys(DEFAULT_PREFERENCES)\n\nfunction throwOnInvalidValue(value, { key, acceptNull = false } = {}) {\n  if (\n    !isBoolean(value)\n    && !['granted', 'denied'].includes(value)\n    &&\n    (!acceptNull && value === null)\n  ) {\n    const message = `Invalid value${key ? ` for field \\`${key}\\`` : ''}: ${value}. Must be either boolean or one of 'granted' or 'denied'.`\n    throw new TypeError(message)\n  }\n}\n\nfunction throwOnInvalidKey(key) {\n  if (!keys.includes(key)) {\n    const message = `Invalid key: ${key}. Must be one of ${keys.reduce((str, key, i) => i === keys.length ? `${str} or ${key}` : `${str}, ${key}`)}.`\n    throw new TypeError(message)\n  }\n}\n\n/**\n * @typedef {(ConsentTokens|import('./constants.js').ConsentValues)} ConsentTokensOrTokens\n */\n\n/**\n * Represents a set of consent tokens that can be used to track user consent preferences.\n *\n * The `ConsentTokens` class provides a way to manage and interact with consent tokens, which are used to track a user's preferences for various types of data processing, such as analytics, functionality, and advertising.\n *\n * The class provides methods for setting and retrieving individual consent tokens, as well as methods for setting all consent tokens at once and resetting the consent state. It also provides a method for generating a consent state object that can be used for integrating with third-party tools, such as Google Tag Manager.\n *\n * The class uses a set of default preferences defined in the `DEFAULT_PREFERENCES` constant, and provides validation to ensure that consent token values are valid.\n */\nexport class ConsentTokens {\n\n  /**\n   * Creates a new `ConsentTokens` instance from the provided `tokens` object or value.\n   *\n   * If `tokens` is an object, the method iterates over its keys and sets the corresponding consent token values.\n   *\n   * If `tokens` is not an object, the method sets all consent token values to the provided `tokens` value.\n   *\n   * The method returns the newly created `ConsentTokens` instance.\n   *\n   * @param {ConsentTokensOrTokens} tokens - An object or value representing the consent token values to initialize the `ConsentTokens` instance with.\n   * @returns {ConsentTokens} - A new `ConsentTokens` instance initialized with the provided `tokens`.\n   */\n  static from(tokens) {\n    const consentTokens = new ConsentTokens()\n\n    if (tokens) {\n      if (isObject(tokens)) {\n        Object.keys(tokens).forEach(key => {\n          consentTokens.#setToken(key, tokens[key], true)\n        })\n      } else {\n        consentTokens.#setAll(tokens, true)\n      }\n    }\n\n    return consentTokens\n  }\n\n  #tokens = {\n    ...DEFAULT_PREFERENCES\n  }\n\n  #setToken(key, value, acceptNull = false) {\n    throwOnInvalidKey(key)\n    throwOnInvalidValue(value, { key, acceptNull })\n\n    this.#tokens[key] = isBoolean(value) ? value ? 'granted' : 'denied' : value\n  }\n\n  #setAll(value, acceptNull = false) {\n\n    throwOnInvalidValue(value, { acceptNull })\n\n    if (typeof value !== 'string') {\n      value = value ? 'granted' : 'denied'\n    }\n\n    Object.keys(this.#tokens).forEach(key => this.#tokens[key] = value)\n  }\n  #stack\n\n  constructor(tokens) {\n\n    const t = new Error()\n    this.#stack = t.stack.split('\\n').map(line => line.trim())\n\n    // Defining getters and setters on the constructor function\n    // so they are enumerables\n\n    Object.defineProperties(this, {\n      analytics_consent: {\n        enumerable: true,\n        get: () => this.#tokens.analytics_consent,\n        set: value => this.#setToken('analytics_consent', value)\n      },\n      functionality_consent: {\n        enumerable: true,\n        get: () => this.#tokens.functionality_consent,\n        set: value => this.#setToken('functionality_consent', value)\n      },\n      ad_consent: {\n        enumerable: true,\n        get: () => this.#tokens.ad_consent,\n        set: value => this.#setToken('ad_consent', value)\n      }\n    })\n\n    if (typeof tokens !== 'undefined') {\n      if (isObject(tokens)) {\n        Object.keys(DEFAULT_PREFERENCES).forEach(key => {\n          if (Reflect.has(tokens, key)) {\n            this.#setToken(key, tokens[key])\n          }\n        })\n\n      } else {\n\n        this.#setAll(tokens)\n      }\n    }\n  }\n\n  isGranted(key) {\n    throwOnInvalidKey(key)\n\n    return this.#tokens[key] === CONSENT_STATES.GRANTED\n  }\n\n  isDenied(key) {\n    throwOnInvalidKey(key)\n\n    return this.#tokens[key] === CONSENT_STATES.DENIED\n  }\n\n  state() {\n    return Object.values(this.#tokens).every(value => value !== null) ? CONSENT_STATES.DETERMINATE : CONSENT_STATES.INDETERMINATE\n  }\n\n  setAll(data) {\n    if (isObject(data)) {\n      Object.entries(data).forEach(([key, value]) => this.#setToken(key, value))\n      return\n    }\n\n    this.#setAll(data)\n  }\n\n  resetConsent() {\n    Object.keys(this.#tokens).forEach(key => this.#tokens[key] = null)\n  }\n\n  toGTM(wait_for_update = 500) {\n    console.log(this)\n    if (this.state() === CONSENT_STATES.INDETERMINATE) {\n      const nullEntries = Object.entries(this.#tokens).filter(token => token[1] === null)\n      throw new Error(`All tokens must have an explicit value. Undefined token${nullEntries.length > 1 ? 's' : ''}: ${nullEntries.map(token => token[0]).join(', ')}`)\n    }\n\n    const { analytics_consent, ad_consent } = this.#tokens\n\n    return {\n      ad_user_data: ad_consent,\n      ad_personalization: ad_consent,\n      ad_consent: ad_consent,\n      analytics_consent: analytics_consent,\n      wait_for_update\n    }\n\n  }\n}"],"names":["boolTag","isBoolean","value","isObjectLike","baseGetTag","keys","Object","DEFAULT_PREFERENCES","throwOnInvalidValue","key","acceptNull","includes","TypeError","throwOnInvalidKey","message","reduce","str","i","length","ConsentTokens","tokens","stack","t","Error","this","split","map","line","trim","defineProperties","analytics_consent","enumerable","get","set","setToken","functionality_consent","ad_consent","isObject","forEach","Reflect","has","setAll","from","consentTokens","CONSENT_STATES","GRANTED","DENIED","state","values","every","DETERMINATE","INDETERMINATE","data","entries","wait_for_update","console","log","nullEntries","filter","token","join","ad_user_data","ad_personalization"],"mappings":"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","x_google_ignoreList":[0]}
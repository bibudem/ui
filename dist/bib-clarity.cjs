/**
 * Librairie du system desing des Bibliothèques de l'Université de Montréal
 * @module @bibudem/ui
 * @version 1.2.0
 * @author Christian Rémillard <christian.remillard@umontreal.ca>
 * @license ISC
 * @see https://github.com/bibudem/ui
 */
var t,e,n,i,r=Object.defineProperty,s=t=>{throw TypeError(t)},o=(t,e,n)=>((t,e,n)=>e in t?r(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n)(t,"symbol"!=typeof e?e+"":e,n),a=(t,e,n)=>e.has(t)||s("Cannot "+n),c=(t,e,n)=>(a(t,e,"read from private field"),n?n.call(t):e.get(t)),l=(t,e,n)=>e.has(t)?s("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,n),d=(t,e,n)=>(a(t,e,"access private method"),n);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const y=require("./lit-element-BHNMc-Kg.cjs"),u=require("./bib-FUdqwbg3.cjs"),p=require("./events-DuQfPugX.cjs"),h=require("./constants3.cjs"),b=require("./constants2.cjs"),m={init(t){!function(t){try{return e=window,n=document,i="clarity",r="script",s=t,void(n.getElementById("clarity-script")||(e[i]=e[i]||function(){(e[i].q=e[i].q||[]).push(arguments)},(o=n.createElement(r)).async=1,o.src="https://www.clarity.ms/tag/"+s+"?ref=npm",o.id="clarity-script",(a=n.getElementsByTagName(r)[0]).parentNode.insertBefore(o,a)))}catch(c){return}var e,n,i,r,s,o,a}(t)},setTag(t,e){window.clarity("set",t,e)},identify(t,e,n,i){window.clarity("identify",t,e,n,i)},consent(t=!0){window.clarity("consent",t)},upgrade(t){window.clarity("upgrade",t)},event(t){window.clarity("event",t)}};class w extends y.s{constructor(){super(),l(this,e),l(this,t,null),this.hidden=!0,this.projectId=this.projectId||h.CLARITY_PROJECT_ID,this.clarity=m,d(this,e,n).call(this)}setConsent(n){if("boolean"!=typeof n)throw new TypeError('The "granted" parameter must be a boolean');var r,s,o,l;c(this,t)!==n&&(console.log(`[bib-clarity] Setting consent to ${n} (was: ${c(this,t)})`),o=n,a(r=this,s=t,"write to private field"),l?l.call(r,o):s.set(r,o),this.clarity.consent(n),d(this,e,i).call(this,b.EVENT_NAMES.CHANGE,{detail:n}))}}t=new WeakMap,e=new WeakSet,n=async function(){const t=this,n=this.projectId;async function r(e){console.log(`<bib-clarity> recieved an event from <bib-consent>: ${e.type}`,e.detail);const n=e.detail;if(null===n)return void t.consent(!1);const{analytics_consent:i}=n;t.setConsent("granted"===i)}this.clarity.init(n),setTimeout((async()=>{const n=document.querySelector("bib-consent");null===n?(console.info("No <bib-consent /> element found. Turning off Clarity tracking."),t.setConsent(!1)):(n.addEventListener(b.EVENT_NAMES.READY,r),n.addEventListener(b.EVENT_NAMES.CHANGE,r)),d(this,e,i).call(this,b.EVENT_NAMES.READY)}))},i=function(t,e=null){p.dispatchPublicEvent(this,t,{detail:e})},o(w,"properties",{projectId:{type:String,attribute:"project-id"},hidden:{type:Boolean}}),o(w,"styles",[y.i`${y.r("@layer component{:host(hidden){display:none}}")}`]),window.customElements.get("bib-clarity")||window.customElements.define("bib-clarity",w),u.addToGlobalBib("clarity",{}),exports.BibClarity=w;
//# sourceMappingURL=bib-clarity.cjs.map

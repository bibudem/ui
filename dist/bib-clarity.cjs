/**
 * Librairie du system desing des Bibliothèques de l'Université de Montréal
 * @module @bibudem/ui
 * @version 1.3.0
 * @author Christian Rémillard <christian.remillard@umontreal.ca>
 * @license ISC
 * @see https://github.com/bibudem/ui
 */
var t,e,n,i,s=Object.defineProperty,o=t=>{throw TypeError(t)},r=(t,e,n)=>((t,e,n)=>e in t?s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n)(t,"symbol"!=typeof e?e+"":e,n),a=(t,e,n)=>e.has(t)||o("Cannot "+n),c=(t,e,n)=>(a(t,e,"read from private field"),n?n.call(t):e.get(t)),l=(t,e,n)=>e.has(t)?o("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,n),d=(t,e,n)=>(a(t,e,"access private method"),n);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const y=require("./lit-element-BHNMc-Kg.cjs"),u=require("./bib-clarity-BQiFwhHh.cjs"),b=require("./bib-DL4f4STe.cjs"),h=require("./events-DuQfPugX.cjs"),E=require("./ConsentTokenV2.cjs"),p=require("./constants3.cjs"),f=require("./constants2.cjs");class m extends y.s{constructor(){super(),l(this,e),l(this,t,null),this.hidden=!0,this.projectId=this.projectId||p.CLARITY_PROJECT_ID,this.clarity=u.Clarity,d(this,e,n).call(this)}setConsent(n){const s=new E(n);var o,r,l,y;JSON.stringify(c(this,t))!==JSON.stringify(s)&&(console.log(`[bib-clarity] Setting consent to %o (was ${null===c(this,t)?"not set":c(this,t)}).`,s),l=s,a(o=this,r=t,"write to private field"),y?y.call(o,l):r.set(o,l),this.clarity.consent("consentv2",s),d(this,e,i).call(this,f.EVENT_NAMES.CHANGE,{detail:s}))}}t=new WeakMap,e=new WeakSet,n=async function(){const t=this;async function e(e){console.log(`<bib-clarity> recieved an event from <bib-consent>: ${e.type}`,e.detail);const n=e.detail;if(null===n)return void t.setConsent(!1);const{analytics_consent:i,ad_consent:s}=n;t.readyState===p.READY_STATES.INDETERMINATE&&(t.readyState=p.READY_STATES.CONNECTED),t.setConsent({analytics_consent:i,ad_consent:s})}this.clarity.init(this.projectId),setTimeout((async()=>{const n=document.querySelector("bib-consent");null===n?(console.info("No <bib-consent /> element found. Turning off Clarity tracking."),t.setConsent(!1)):(n.addEventListener(f.EVENT_NAMES.READY,e),n.addEventListener(f.EVENT_NAMES.CHANGE,e))}))},i=function(t,e=null){h.dispatchPublicEvent(this,t,{detail:e})},r(m,"properties",{projectId:{type:String,attribute:"project-id"},hidden:{type:Boolean}}),r(m,"styles",[y.i`${y.r(u.styles)}`]),window.customElements.get("bib-clarity")||window.customElements.define("bib-clarity",m),b.addToGlobalBib("clarity",{}),exports.BibClarity=m;
//# sourceMappingURL=bib-clarity.cjs.map

/**
 * Librairie du system desing des Bibliothèques de l'Université de Montréal
 * @module @bibudem/ui
 * @version 0.16.0
 * @author Christian Rémillard <christian.remillard@umontreal.ca>
 * @license ISC
 * @see https://github.com/bibudem/ui
 */
var e,t,o=Object.defineProperty,s=e=>{throw TypeError(e)},n=(e,t,s)=>((e,t,s)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s),i=(e,t,o)=>t.has(e)||s("Cannot "+o),r=(e,t,o)=>(i(e,t,"read from private field"),o?o.call(e):t.get(e)),a=(e,t,o)=>t.has(e)?s("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,o);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const l=require("./lit-element-ibXEACGN.cjs"),c=require("./constants-CpX72Nz6.cjs"),g=require("./ref-C8k6d1Nw.cjs"),d=require("./logger-C1M6pIZ-.cjs"),h=require("./ConsentStorage.cjs");class p extends l.LitElement{constructor(){super(),a(this,e),a(this,t,d.loggerFactory("consent-server")),this.connected=!1,this.debug=this.debug||!1,this.loggerRef=g.createRef(),this.allowedOrigins=this.allowedOrigins||[],this.init()}async init(){var t,o,s,n;this.log("Initializing BibConsentServer..."),t=this,o=e,s=await h(),i(t,o,"write to private field"),n?n.call(t,s):o.set(t,s),this.log("Connected to storage."),r(this,e).listen((e=>{this.log("Storage updated with data",e.detail)})),this.log("Start listening for storage updates..."),this.startListening()}log(...e){if(this.hasAttribute("debug")){const o=e.map((e=>"string"==typeof e?e.replace(/<\/?[^>]+(>|$)/g,""):e));r(this,t).call(this,...o);const s=e.map((e=>"string"==typeof e?e:`<code class="value">${JSON.stringify(e)}</code>`)).join(" ");if(this.loggerRef.value){const e=this.loggerRef.value;e.innerHTML+=`${""===e.innerHTML?"":"<br />"}${s}`,e.scrollTop=e.scrollHeight}}}async startListening(){const{listenMessage:t}=await c.startListening({eventFilter:e=>{const{origin:t}=e;return this.allowedOrigins.length>0&&this.allowedOrigins.some((e=>c.patternMatchesOrigin(e,t)))}});this.connected=!0,this.log("Connected:",`<code class="value">${this.connected}</code>`),this.log("Listening for postMessage events..."),t((async(t,o,s)=>{let n;switch(t){case"setConsentTokens":n=await r(this,e).setConsentTokens(o);break;case"getConsentTokens":n=await r(this,e).getConsentTokens();break;case"resetTokens":n=await r(this,e).resetTokens();break;case"ping":n="pong";break;default:throw this.log(`Unknown method: <code class="method">${t}</code>. Payload:`,o),new Error(`Unknown method: ${t}`)}o?this.log(`Method <code class="method">${t}</code> called with payload:`,o,"response:",n):this.log(`Method <code class="method">${t}</code> called.`,"response:",n),s(n)}))}render(){return l.html`<h1>I am bib-consent-server</h1><div class="log-container"><div class="log" ${g.ref(this.loggerRef)}></div></div>`}}e=new WeakMap,t=new WeakMap,n(p,"properties",{connected:{type:Boolean},debug:{type:Boolean,reflect:!0},allowedOrigins:{type:String,attribute:"allowed-origins",converter:{fromAttribute:e=>e.split(/\s+/).map((e=>e.trim())),toAttribute:e=>e.join(" ")}}}),n(p,"styles",[l.css`${l.unsafeCSS(":host{display:none}:host([debug]){display:block;height:100vh}body{margin:0}h1{text-align:center;padding:.25em 0;margin:0;font:unset;font-variant:all-small-caps;background-color:#e5e5e5}.log-container{padding:0;font-size:13px;border:1px solid silver}.log{box-sizing:border-box;-webkit-text-size-adjust:100%;font-family:ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace!important;font-size:small;margin:0;padding:.35rem;width:100%;background-color:unset;border:none;tab-size:8;outline:none;overflow-y:auto;height:100px;line-height:20px;overflow-wrap:normal;overscroll-behavior-x:none;z-index:1}.log code{font-size:13px}.log .function,.log .method{color:#881280}.log .property{color:#994500}.log .value{color:#1a1aa6}")}`]),window.customElements.get("bib-consent-server")||window.customElements.define("bib-consent-server",p),exports.BibConsentServer=p;
//# sourceMappingURL=bib-consent-server.cjs.map

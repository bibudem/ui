{"version":3,"file":"bib-consent-preferences-dialog-Dzey7sb8.cjs","sources":["../node_modules/@lit/context/lib/context-request-event.js","../node_modules/@lit/context/lib/controllers/context-consumer.js","../node_modules/@auroratide/toggle-switch/lib/events.js","../node_modules/@auroratide/toggle-switch/lib/toggle-switch.js","../src/components/bib-consent/bib-consent-preferences-dialog.js","../node_modules/@auroratide/toggle-switch/lib/define.js","../node_modules/lodash-es/isBoolean.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nclass s extends Event{constructor(s,t,e){super(\"context-request\",{bubbles:!0,composed:!0}),this.context=s,this.callback=t,this.subscribe=e??!1}}export{s as ContextRequestEvent};\n//# sourceMappingURL=context-request-event.js.map\n","import{ContextRequestEvent as t}from\"../context-request-event.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class s{constructor(t,s,i,h){if(this.subscribe=!1,this.provided=!1,this.value=void 0,this.t=(t,s)=>{this.unsubscribe&&(this.unsubscribe!==s&&(this.provided=!1,this.unsubscribe()),this.subscribe||this.unsubscribe()),this.value=t,this.host.requestUpdate(),this.provided&&!this.subscribe||(this.provided=!0,this.callback&&this.callback(t,s)),this.unsubscribe=s},this.host=t,void 0!==s.context){const t=s;this.context=t.context,this.callback=t.callback,this.subscribe=t.subscribe??!1}else this.context=s,this.callback=i,this.subscribe=h??!1;this.host.addController(this)}hostConnected(){this.dispatchRequest()}hostDisconnected(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=void 0)}dispatchRequest(){this.host.dispatchEvent(new t(this.context,this.t,this.subscribe))}}export{s as ContextConsumer};\n//# sourceMappingURL=context-consumer.js.map\n","export const CHANGED = 'toggle-switch:change';\nexport const changeEvent = (checked) => new CustomEvent(CHANGED, {\n    detail: { checked }\n});\n","import { changeEvent } from './events.js';\nconst CHECKED_ATTR = 'checked';\nconst DISABLED_ATTR = 'disabled';\nexport class ToggleSwitchElement extends HTMLElement {\n    static defaultElementName = 'toggle-switch';\n    static html = `\n        <span part=\"track\">\n            <span part=\"slider\"></span>\n        </span>\n    `;\n    static css = `\n        :host {\n            display: inline-block;\n            width: 2em;\n            height: 1em;\n            cursor: pointer;\n        }\n\n        span {\n            box-sizing: border-box;\n            display: inline-block;\n            line-height: 1;\n        }\n\n        [part=\"track\"] {\n            width: 100%;\n            height: 100%;\n            background-color: #dddddd;\n            text-align: left;\n            transition: all 0.256s;\n        }\n\n        [part=\"slider\"] {\n            width: 50%;\n            height: 100%;\n            background-color: #777777;\n            transition: all 0.256s;\n            vertical-align: text-top;\n        }\n\n        :host([checked]) [part=\"slider\"] {\n            transform: translateX(100%);\n        }\n\n        :host([disabled]) {\n            cursor: not-allowed;\n            opacity: 0.5;\n        }\n    `;\n    static formAssociated = true;\n    static get observedAttributes() {\n        return [CHECKED_ATTR];\n    }\n    constructor() {\n        super();\n        this.#createRoot();\n    }\n    get checked() { return this.hasAttribute(CHECKED_ATTR); }\n    set checked(value) { this.toggleAttribute(CHECKED_ATTR, value); }\n    get disabled() { return this.hasAttribute(DISABLED_ATTR); }\n    set disabled(value) { this.toggleAttribute(DISABLED_ATTR, value); }\n    toggle = () => {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n        }\n    };\n    connectedCallback() {\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'switch');\n        }\n        if (!this.hasAttribute('tabindex')) {\n            this.setAttribute('tabindex', '0');\n        }\n        this.#updateChecked(false);\n        this.addEventListener('click', this.toggle);\n        this.addEventListener('keydown', this.#onKeyDown);\n    }\n    disconnectedCallback() {\n        this.removeEventListener('click', this.toggle);\n        this.removeEventListener('keydown', this.#onKeyDown);\n    }\n    attributeChangedCallback(name) {\n        if (name === CHECKED_ATTR) {\n            this.#updateChecked(true);\n        }\n    }\n    #onKeyDown = (e) => {\n        switch (e.key) {\n            case ' ':\n            case 'Enter':\n                e.preventDefault();\n                this.toggle();\n                break;\n            default:\n                break;\n        }\n    };\n    #updateChecked = (dispatch = false) => {\n        this.setAttribute('aria-checked', this.checked.toString());\n        if (dispatch)\n            this.dispatchEvent(changeEvent(this.checked));\n    };\n    #createRoot = () => {\n        const root = this.shadowRoot ?? this.attachShadow({ mode: 'open' });\n        const style = document.createElement('style');\n        style.innerHTML = ToggleSwitchElement.css;\n        const template = document.createElement('template');\n        template.innerHTML = ToggleSwitchElement.html;\n        root.appendChild(style);\n        root.appendChild(template.content);\n        return root;\n    };\n}\n","import { css, html, LitElement, unsafeCSS } from 'lit'\nimport { ContextConsumer, ContextProvider } from '@lit/context'\nimport { createRef, ref } from 'lit/directives/ref.js'\nimport { isBoolean } from 'lodash-es'\nimport '@auroratide/toggle-switch/lib/define.js'\nimport { consentContext } from './consent-context.js'\nimport { DEFAULT_PREFERENCES } from './constants.js'\nimport styles from './bib-consent-preferences-dialog.scss?inline'\n\n/**\n * Generates an object with the default consent preferences, where each key is set to the provided boolean value.\n *\n * @param {boolean} value - The boolean value to set for each consent preference.\n * @returns {Object} An object with the default consent preferences, where each key is set to the provided value.\n */\nfunction getConsentValues(value) {\n  return Object.keys(DEFAULT_PREFERENCES).reduce((obj, key) => ({ ...obj, [key]: value }), {})\n}\nexport class BibConsentPreferencesDialog extends LitElement {\n  static properties = {\n    debug: {\n      type: Boolean,\n      reflect: true\n    },\n    open: {\n      type: Boolean,\n      state: true\n    },\n  }\n\n  static styles = [\n    css`${unsafeCSS(styles)}`\n  ]\n\n  _consentConsumer\n  #toggleChoices = getConsentValues(false)\n\n  /**\n   * Constructs a new `BibConsentPreferencesDialog` instance.\n   *\n   * This constructor initializes the component's state, creates a reference to the dialog element, and subscribes to the consent context to retrieve the user's consent preferences.\n   *\n   * The `open` property is initially set to `false`, and the `#toggleChoices` property is initialized based on the consent context value. If the consent context value is `null`, `#toggleChoices` is set to the default consent preferences.\n   */\n  constructor() {\n    super()\n    this.open = false\n    this._dialogRef = createRef()\n    this._consentConsumer = new ContextConsumer(this, {\n      context: consentContext, subscribe: true, callback: value => {\n        console.log('callback: ', value)\n        this.#toggleChoices = value === null ? getConsentValues(false) : value\n        // this.requestUpdate()\n      }\n    })\n  }\n\n  /**\n   * Saves the user's consent preferences.\n   *\n   * @param {boolean|Object} preference - The consent preferences to save. If a boolean is provided, it will be used to generate a full set of consent values. If an object is provided, it will be used directly as the consent preferences.\n   * @returns {void}\n   * @throws {Error} If there is an error saving the preferences.\n   */\n  async savePreferences(preference) {\n    try {\n      let preferences\n\n      if (isBoolean(preference)) {\n        preferences = getConsentValues(preference)\n      } else {\n        preferences = this.#toggleChoices\n      }\n\n      this.dispatchEvent(new CustomEvent('update', { detail: preferences }))\n    } catch (error) {\n      console.error('[savePreferences] error: ', error)\n      throw error\n    }\n  }\n\n  /**\n   * Shows the consent preferences dialog.\n   *\n   * This method retrieves the user's consent preferences from the consent context and initializes the `#toggleChoices` property with the values. It then shows the dialog modal.\n   *\n   * @returns {void}\n   */\n  show() {\n    console.log('[show] this._consentConsumer.value: ', this._consentConsumer.value)\n    this.#toggleChoices = this._consentConsumer.value ? { ...this._consentConsumer.value } : getConsentValues(false)\n    this._dialogRef.value?.showModal()\n  }\n\n  /**\n   * Closes the dialog and optionally emits an event.\n   *\n   * @param {boolean} [emit=true] - Whether to emit the 'close' event when the dialog is closed.\n   * @returns {void}\n   */\n  close(emit = true) {\n    this._dialogRef.value?.close(emit)\n  }\n\n  #onDetailsClick(event) {\n    // Prevent the <details> element to open if user clics on the toggle button\n    if (event.composedPath().some(node => node.matches?.('toggle-switch.switch'))) {\n      event.preventDefault()\n    }\n  }\n\n  #onToggleSwitchChange(event) {\n    console.log('[#onToggleSwitchChange] event: ', event)\n    const { target, detail } = event\n    const { checked } = detail\n    const name = target.getAttribute('name')\n    this.#toggleChoices[name] = checked\n  }\n\n  render() {\n\n    return html`\n      <bib-consent-dialog show-close class='preferences-dialog' ${ref(this._dialogRef)}>\n        <div class=\"content-container\">\n          <div class=\"title\">Personnaliser les t√©moins</div>\n          <div class=\"personalized-cookies-description\">\n            <p>Les t√©moins (aussi appel√©s ¬´&nbsp;cookies&nbsp;¬ª) sont de petits fichiers textes qui sont t√©l√©charg√©s lorsque vous consultez certaines pages d‚Äôun site et qui sont enregistr√©s dans la m√©moire de l‚Äôappareil que vous utilisez. Ils permettent d‚Äôenregistrer certaines informations (type de navigateur, langue, pays, adresse IP, identifiant, etc.) afin d‚Äô√™tre r√©cup√©r√©es par le serveur lors de visites subs√©quentes. Ils sont utilis√©s pour mettre √† jour et optimiser nos plateformes en fonction de l‚Äôutilisation que vous en faites et de vos besoins.</p>\n            <p>L‚ÄôUdeM collecte des donn√©es sur les plateformes, afin d‚Äôanalyser leur utilisation et d‚Äôam√©liorer l‚Äôexp√©rience des visiteurs.</p>\n            <p>L‚ÄôUdeM utilise √©galement les services de <a href=\"https://vie-privee.umontreal.ca/ga\" target=\"_blank\"> Google Analytics</a>, afin d'analyser le trafic Web et de recueillir des donn√©es de navigation √† des fins statistiques et d‚Äôam√©lioration des Plateformes.</p>\n            <p>Parce que nous respectons votre droit √† la vie priv√©e, nous vous donnons la possibilit√© de ne pas autoriser certains types de t√©moins. Cliquez sur les diff√©rentes cat√©gories pour obtenir plus de d√©tails sur chacune d‚Äôentre elles et modifier les param√®tres par d√©faut. Toutefois, si vous d√©sactivez certains types de t√©moins, votre exp√©rience de navigation et les services que nous sommes en mesure de vous offrir peuvent √™tre impact√©s.</p>\n          </div>\n          <div class=\"accordion-container\">\n            <div class=\"accordion-list\">\n              <details class=\"accordion-item\">\n                <summary class=\"accordion-item__summary\">\n                  <span class=\"accordion-item__summary-title\">T√©moins n√©cessaires</span>\n                  <span class=\"accordion-item__summary-icon\">\n                    <span class=\"close\">+</span>\n                    <span class=\"open\">-</span>\n                    <div class=\"toggle-container label\">Toujours activ√©s</div>\n                  </span>\n                </summary>\n                <div class=\"accordion-item__content\">\n                  <p>Ces t√©moins sont essentiels au bon fonctionnement et √† la s√©curit√© de nos sites Web et services en ligne. Ils ne peuvent pas √™tre d√©sactiv√©s. Ils nous permettent notamment de s√©curiser votre connexion en recueillant vos informations d‚Äôidentification, personnaliser votre interface (ex. : choix de langue) et conserver vos pr√©f√©rences.</p>\n                  <p class=\"list-title\">Les renseignements suivants sont notamment recueillis&nbsp;:</p>\n                  <ul class=\"list-disc\">\n                    <li>le type et la version du navigateur;</li>\n                    <li>le type et la version du syst√®me d‚Äôexploitation;</li>\n                    <li>le type et le mod√®le d‚Äôappareil (t√©l√©phone, tablette ou ordinateur);</li>\n                    <li>la r√©solution de l‚Äô√©cran de l‚Äôappareil que vous utilisez;</li>\n                    <li>la langue utilis√©e par le navigateur.</li>\n                  </ul>\n                </div>\n              </details>\n\n              <details class=\"accordion-item\" @click=\"${{ handleEvent: this.#onDetailsClick, capture: true }}\">\n                <summary class=\"accordion-item__summary\">\n                  <div class=\"accordion-item__summary-title\">T√©moins de performance</div>\n                  <div class=\"accordion-item__summary-icon\">\n                    <span class=\"close\">+</span>\n                    <span class=\"open\">-</span>\n                    <div class=\"toggle-container\">\n                      <toggle-switch name=\"performanceCookies\" class=\"switch\" ?checked=\"${this.#toggleChoices.performanceCookies}\" @toggle-switch:change=\"${this.#onToggleSwitchChange}\"></toggle-switch>\n                    </div>\n                  </div>\n                </summary>\n                <div class=\"accordion-item__content\">\n                  <p>Ces t√©moins sont utilis√©s pour analyser la navigation sur nos sites (provenance des visiteurs, fr√©quence des visites, pages plus ou moins visit√©es, etc.) dans le but d‚Äôen am√©liorer le fonctionnement et d‚Äôoffrir une meilleure exp√©rience utilisateurs aux visiteurs. Toutes les informations collect√©es par ces t√©moins sont agr√©g√©es et donc anonymis√©es.</p>\n                </div>\n              </details>\n\n              <details class=\"accordion-item\" @click=\"${{ handleEvent: this.#onDetailsClick, capture: true }}\">\n                <summary class=\"accordion-item__summary\">\n                  <span class=\"accordion-item__summary-title\">T√©moins de fonctionnalit√©</span>\n                  <span class=\"accordion-item__summary-icon\">\n                    <span class=\"close\">+</span>\n                    <span class=\"open\">-</span>\n                    <div class=\"toggle-container\">\n                      <toggle-switch name=\"functionalityCookies\" class=\"switch\" ?checked=\"${this.#toggleChoices.functionalityCookies}\" @toggle-switch:change=\"${this.#onToggleSwitchChange}\"></toggle-switch>\n                    </div>\n                  </span>\n                </summary>\n                <div class=\"accordion-item__content\">\n                  <p>Ces t√©moins permettent d‚Äôam√©liorer les fonctionnalit√©s et la personnalisation de nos sites. Par exemple, ils rendent possible l‚Äôutilisation de vid√©os et de services de messagerie instantan√©e ou encore le partage de contenus de nos sites sur des plateformes de m√©dias sociaux. Si vous d√©sactivez ces t√©moins, votre exp√©rience de navigation et les services que nous sommes en mesure de vous offrir peuvent √™tre impact√©s.</p>\n                </div>\n              </details>\n              <details class=\"accordion-item\" @click=\"${{ handleEvent: this.#onDetailsClick, capture: true }}\">\n                <summary class=\"accordion-item__summary\"><span class=\"accordion-item__summary-title\">T√©moins publicitaires</span><span class=\"accordion-item__summary-icon\"><span class=\"close\">+</span><span class=\"open\">-</span>\n                    <div class=\"toggle-container\">\n                      <toggle-switch name=\"adsCookies\" class=\"switch\" ?checked=\"${this.#toggleChoices.adsCookies}\" @toggle-switch:change=\"${this.#onToggleSwitchChange}\"></toggle-switch>\n                    </div>\n                  </span></summary>\n                <div class=\"accordion-item__content\">\n                  <p>Ces t√©moins peuvent √™tre activ√©s sur nos sites web pour √©tablir des profils sur vos int√©r√™ts. Ils nous aident √† vous proposer des publicit√©s et des contenus personnalis√©s. Si vous d√©sactivez ces t√©moins, des publicit√©s et des contenus moins cibl√©es sur vos int√©r√™ts vous seront propos√©s.</p>\n                </div>\n              </details>\n            </div>\n            <p class=\"update-information\">Vous pouvez modifier en tout temps vos pr√©f√©rences en s√©lectionnant les param√®tres appropri√©s dans votre navigateur pour accepter ou refuser les t√©moins.</p>\n            <div class=\"actions-container\">\n              <button class=\"btn--filled\" type=\"button\" @click=\"${() => this.savePreferences()}\">Enregistrer mes pr√©f√©rences</button>\n              <button class=\"btn--filled\" type=\"button\" @click=\"${() => this.savePreferences(false)}\">Tout refuser</button>\n              <button class=\"btn--filled\" type=\"button\" @click=\"${() => this.savePreferences(true)}\">Tout accepter</button>\n            </div>\n            <div class=\"learn-more-container\">Voir notre <a href=\"https://vie-privee.umontreal.ca/confidentialite\">politique de confidentialit√©</a> et nos <a href=\"https://vie-privee.umontreal.ca/conditions-dutilisation\">conditions d‚Äôutilisation</a>. </div>\n          </div>\n        </div>\n      </bib-consent-dialog>\n    `\n  }\n}\n\nif (!window.customElements.get('bib-consent-preferences-dialog')) {\n  window.customElements.define('bib-consent-preferences-dialog', BibConsentPreferencesDialog)\n}","import { ToggleSwitchElement } from './toggle-switch.js';\nif (!window.customElements.get(ToggleSwitchElement.defaultElementName)) {\n    window.customElements.define(ToggleSwitchElement.defaultElementName, ToggleSwitchElement);\n}\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nexport default isBoolean;\n"],"names":["Event","constructor","s","t","e","super","bubbles","composed","this","context","callback","subscribe","i","h","provided","value","unsubscribe","host","requestUpdate","addController","hostConnected","dispatchRequest","hostDisconnected","dispatchEvent","CHECKED_ATTR","DISABLED_ATTR","ToggleSwitchElement","HTMLElement","toggle","disabled","checked","onKeyDown","key","preventDefault","__privateAdd","_t","dispatch","setAttribute","toString","CustomEvent","detail","createRoot","root","shadowRoot","attachShadow","mode","style","document","createElement","innerHTML","css","template","html","appendChild","content","hasAttribute","toggleAttribute","connectedCallback","updateChecked","addEventListener","disconnectedCallback","removeEventListener","attributeChangedCallback","name","static","_l","getConsentValues","Object","keys","DEFAULT_PREFERENCES","reduce","obj","window","customElements","get","defaultElementName","define","BibConsentPreferencesDialog","LitElement","_u_instances","_consentConsumer","toggleChoices","open","_dialogRef","createRef","ContextConsumer","consentContext","log","savePreferences","preference","preferences","isObjectLike","baseGetTag","error","console","show","showModal","close","emit","render","ref","handleEvent","capture","performanceCookies","onToggleSwitchChange","functionalityCookies","onDetailsClick","adsCookies","WeakSet","o_fn","event","composedPath","some","node","matches","n_fn","target","getAttribute","debug","type","Boolean","reflect","state","unsafeCSS"],"mappings":"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","x_google_ignoreList":[0,1,2,3,5,6]}
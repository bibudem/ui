{"version":3,"file":"bib-B3qP1oej.cjs","sources":["../node_modules/lodash-es/identity.js","../node_modules/lodash-es/_baseCreate.js","../node_modules/lodash-es/_shortOut.js","../node_modules/lodash-es/_defineProperty.js","../node_modules/lodash-es/_baseSetToString.js","../node_modules/lodash-es/constant.js","../node_modules/lodash-es/_setToString.js","../node_modules/lodash-es/_baseAssignValue.js","../node_modules/lodash-es/_assignValue.js","../node_modules/lodash-es/_overRest.js","../node_modules/lodash-es/_baseKeysIn.js","../node_modules/lodash-es/keysIn.js","../node_modules/lodash-es/_nativeKeysIn.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/isPlainObject.js","../node_modules/lodash-es/_cloneBuffer.js","../node_modules/lodash-es/_assignMergeValue.js","../node_modules/lodash-es/_safeGet.js","../node_modules/lodash-es/_baseMerge.js","../node_modules/lodash-es/_createBaseFor.js","../node_modules/lodash-es/_baseMergeDeep.js","../node_modules/lodash-es/_cloneTypedArray.js","../node_modules/lodash-es/_cloneArrayBuffer.js","../node_modules/lodash-es/toPlainObject.js","../node_modules/lodash-es/isArrayLikeObject.js","../node_modules/lodash-es/_copyArray.js","../node_modules/lodash-es/_copyObject.js","../node_modules/lodash-es/_initCloneObject.js","../node_modules/lodash-es/merge.js","../node_modules/lodash-es/_createAssigner.js","../node_modules/lodash-es/_baseRest.js","../node_modules/lodash-es/_isIterateeCall.js","../node_modules/lodash-es/_apply.js","../src/utils/bib.js"],"sourcesContent":["/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n","import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import { isObject, merge } from 'lodash-es'\nimport pkg from '../../package.json'\n\nexport function addToGlobalBib(prop, value) {\n  const bib = globalThis.bib ?? (globalThis.bib = {})\n  if (typeof bib[prop] === 'undefined') {\n    if (isObject(value)) {\n      bib[prop] = merge({}, bib[prop], value, { version: pkg.version })\n    } else {\n      bib[prop] = value\n    }\n  }\n}"],"names":["identity","value","func","count","lastCalled","objectCreate","Object","create","baseCreate","object","proto","isObject","prototype","result","nativeNow","Date","now","defineProperty","getNative","e","baseSetToString","string","configurable","enumerable","writable","setToString","stamp","remaining","arguments","i","apply","undefined","baseAssignValue","key","hasOwnProperty","assignValue","objValue","call","eq","nativeMax","Math","max","keysIn","isArrayLike","arrayLikeKeys","push","isProto","isPrototype","getPrototype","overArg","getPrototypeOf","funcProto","Function","objectProto","funcToString","toString","objectCtorString","freeExports","exports","nodeType","freeModule","module","Buffer","root","assignMergeValue","safeGet","baseMerge","source","srcIndex","customizer","stack","iteratee","keysFunc","index","iterable","props","length","srcValue","Stack","mergeFunc","typedArray","arrayBuffer","buffer","stacked","get","newValue","isCommon","isArr","isArray","isBuff","isBuffer","isTyped","isTypedArray","isObjectLike","array","Array","slice","constructor","byteLength","Uint8Array","set","byteOffset","baseGetTag","Ctor","isArguments","isNew","isFunction","delete","allocUnsafe","assigner","start","transform","merge","sources","guard","type","isIndex","baseRest","args","otherArgs","thisArg","this","prop","bib","globalThis","version","pkg"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]}